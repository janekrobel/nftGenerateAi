{"ast":null,"code":"var _jsxFileName = \"/Users/janrobel/Documents/PersonalProjekty/nftGenerateAi/clientAndContract/src/Header.js\",\n  _s = $RefreshSig$();\nimport { BurstMode } from \"@mui/icons-material\";\nimport { useState, useEffect } from \"react\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractModel = require('./contractModel.js');\nconst Header = () => {\n  _s();\n  const [button, setButton] = useState(1);\n  const handleMetamask = async () => {\n    if (button === 2) {\n      setButton(1);\n      //dissconnect from metamask from contract model\n    } else {\n      account = await contractModel.connectToMetamask();\n      if (account) {\n        setButton(2);\n      }\n    }\n  };\n  useEffect(() => {}, [button]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      className: \"menuLink\",\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      className: \"menuLink\",\n      children: \"My Nfts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 41\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleMetamask,\n      className: \"MetamaskBtn\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `../UI/Button${button}.png`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 66\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(Header, \"LxG+G7/R4g8C+qIX/bbU7LXyuyY=\");\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["BurstMode","useState","useEffect","contractModel","require","Header","button","setButton","handleMetamask","account","connectToMetamask"],"sources":["/Users/janrobel/Documents/PersonalProjekty/nftGenerateAi/clientAndContract/src/Header.js"],"sourcesContent":["import { BurstMode } from \"@mui/icons-material\";\nimport { useState, useEffect} from \"react\";\nimport \"./index.css\";\nconst contractModel = require('./contractModel.js');\n\nconst Header = () => {\n    const [button, setButton] = useState(1);\n\n    const handleMetamask = async() =>{\n        if(button === 2){\n            setButton(1);\n            //dissconnect from metamask from contract model\n        }\n        else{\n            account = await contractModel.connectToMetamask();\n            if(account){\n                setButton(2);\n            }\n        }\n    }\n\n    useEffect(() => {}, [button]);\n\n    return(\n        <div className=\"header\">\n        <a className=\"menuLink\">Home</a><a className=\"menuLink\">My Nfts</a>\n        <button onClick={handleMetamask} className=\"MetamaskBtn\"><img src={`../UI/Button${button}.png`}/></button>\n        </div> \n    );\n}\n\nexport default Header; "],"mappings":";;AAAA,SAASA,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAC1C,OAAO,aAAa;AAAC;AACrB,MAAMC,aAAa,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AAEnD,MAAMC,MAAM,GAAG,MAAM;EAAA;EACjB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EAEvC,MAAMO,cAAc,GAAG,YAAU;IAC7B,IAAGF,MAAM,KAAK,CAAC,EAAC;MACZC,SAAS,CAAC,CAAC,CAAC;MACZ;IACJ,CAAC,MACG;MACAE,OAAO,GAAG,MAAMN,aAAa,CAACO,iBAAiB,EAAE;MACjD,IAAGD,OAAO,EAAC;QACPF,SAAS,CAAC,CAAC,CAAC;MAChB;IACJ;EACJ,CAAC;EAEDL,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,CAACI,MAAM,CAAC,CAAC;EAE7B,oBACI;IAAK,SAAS,EAAC,QAAQ;IAAA,wBACvB;MAAG,SAAS,EAAC,UAAU;MAAA,UAAC;IAAI;MAAA;MAAA;MAAA;IAAA,QAAI;MAAG,SAAS,EAAC,UAAU;MAAA,UAAC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAI,eACnE;MAAQ,OAAO,EAAEE,cAAe;MAAC,SAAS,EAAC,aAAa;MAAA,uBAAC;QAAK,GAAG,EAAG,eAAcF,MAAO;MAAM;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACpG;AAEd,CAAC;AAAA,GAxBKD,MAAM;AAAA,KAANA,MAAM;AA0BZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}