{"ast":null,"code":"// Replacement for node's internal 'internal/options' module\n\nexports.getOptionValue = getOptionValue;\nfunction getOptionValue(opt) {\n  parseOptions();\n  return options[opt];\n}\nlet options;\nfunction parseOptions() {\n  if (!options) {\n    options = {\n      '--preserve-symlinks': false,\n      '--preserve-symlinks-main': false,\n      '--input-type': undefined,\n      '--experimental-specifier-resolution': 'explicit',\n      '--experimental-policy': undefined,\n      '--conditions': [],\n      '--pending-deprecation': false,\n      ...parseArgv(getNodeOptionsEnvArgv()),\n      ...parseArgv(process.execArgv),\n      ...getOptionValuesFromOtherEnvVars()\n    };\n  }\n}\nfunction parseArgv(argv) {\n  return require('arg')({\n    '--preserve-symlinks': Boolean,\n    '--preserve-symlinks-main': Boolean,\n    '--input-type': String,\n    '--experimental-specifier-resolution': String,\n    // Legacy alias for node versions prior to 12.16\n    '--es-module-specifier-resolution': '--experimental-specifier-resolution',\n    '--experimental-policy': String,\n    '--conditions': [String],\n    '--pending-deprecation': Boolean,\n    '--experimental-json-modules': Boolean,\n    '--experimental-wasm-modules': Boolean\n  }, {\n    argv,\n    permissive: true\n  });\n}\nfunction getNodeOptionsEnvArgv() {\n  const errors = [];\n  const envArgv = ParseNodeOptionsEnvVar(process.env.NODE_OPTIONS || '', errors);\n  if (errors.length !== 0) {\n    // TODO: handle errors somehow\n  }\n  return envArgv;\n}\n\n// Direct JS port of C implementation: https://github.com/nodejs/node/blob/67ba825037b4082d5d16f922fb9ce54516b4a869/src/node_options.cc#L1024-L1063\nfunction ParseNodeOptionsEnvVar(node_options, errors) {\n  const env_argv = [];\n  let is_in_string = false;\n  let will_start_new_arg = true;\n  for (let index = 0; index < node_options.length; ++index) {\n    let c = node_options[index];\n\n    // Backslashes escape the following character\n    if (c === '\\\\' && is_in_string) {\n      if (index + 1 === node_options.length) {\n        errors.push(\"invalid value for NODE_OPTIONS \" + \"(invalid escape)\\n\");\n        return env_argv;\n      } else {\n        c = node_options[++index];\n      }\n    } else if (c === ' ' && !is_in_string) {\n      will_start_new_arg = true;\n      continue;\n    } else if (c === '\"') {\n      is_in_string = !is_in_string;\n      continue;\n    }\n    if (will_start_new_arg) {\n      env_argv.push(c);\n      will_start_new_arg = false;\n    } else {\n      env_argv[env_argv.length - 1] += c;\n    }\n  }\n  if (is_in_string) {\n    errors.push(\"invalid value for NODE_OPTIONS \" + \"(unterminated string)\\n\");\n  }\n  return env_argv;\n}\n\n// Get option values that can be specified via env vars besides NODE_OPTIONS\nfunction getOptionValuesFromOtherEnvVars() {\n  const options = {};\n  if (process.env.NODE_PENDING_DEPRECATION === '1') {\n    options['--pending-deprecation'] = true;\n  }\n  return options;\n}","map":{"version":3,"names":["exports","getOptionValue","opt","parseOptions","options","undefined","parseArgv","getNodeOptionsEnvArgv","process","execArgv","getOptionValuesFromOtherEnvVars","argv","require","Boolean","String","permissive","errors","envArgv","ParseNodeOptionsEnvVar","env","NODE_OPTIONS","length","node_options","env_argv","is_in_string","will_start_new_arg","index","c","push","NODE_PENDING_DEPRECATION"],"sources":["/Users/janrobel/Documents/PersonalProjekty/nftGenerateAi/clientAndContract/node_modules/ts-node/dist-raw/node-options.js"],"sourcesContent":["// Replacement for node's internal 'internal/options' module\n\nexports.getOptionValue = getOptionValue;\nfunction getOptionValue(opt) {\n  parseOptions();\n  return options[opt];\n}\n\nlet options;\nfunction parseOptions() {\n  if (!options) {\n    options = {\n      '--preserve-symlinks': false,\n      '--preserve-symlinks-main': false,\n      '--input-type': undefined,\n      '--experimental-specifier-resolution': 'explicit',\n      '--experimental-policy': undefined,\n      '--conditions': [],\n      '--pending-deprecation': false,\n      ...parseArgv(getNodeOptionsEnvArgv()),\n      ...parseArgv(process.execArgv),\n      ...getOptionValuesFromOtherEnvVars()\n    }\n  }\n}\n\nfunction parseArgv(argv) {\n  return require('arg')({\n    '--preserve-symlinks': Boolean,\n    '--preserve-symlinks-main': Boolean,\n    '--input-type': String,\n    '--experimental-specifier-resolution': String,\n    // Legacy alias for node versions prior to 12.16\n    '--es-module-specifier-resolution': '--experimental-specifier-resolution',\n    '--experimental-policy': String,\n    '--conditions': [String],\n    '--pending-deprecation': Boolean,\n    '--experimental-json-modules': Boolean,\n    '--experimental-wasm-modules': Boolean,\n  }, {\n    argv,\n    permissive: true\n  });\n}\n\nfunction getNodeOptionsEnvArgv() {\n  const errors = [];\n  const envArgv = ParseNodeOptionsEnvVar(process.env.NODE_OPTIONS || '', errors);\n  if (errors.length !== 0) {\n    // TODO: handle errors somehow\n  }\n  return envArgv;\n}\n\n// Direct JS port of C implementation: https://github.com/nodejs/node/blob/67ba825037b4082d5d16f922fb9ce54516b4a869/src/node_options.cc#L1024-L1063\nfunction ParseNodeOptionsEnvVar(node_options, errors) {\n  const env_argv = [];\n\n  let is_in_string = false;\n  let will_start_new_arg = true;\n  for (let index = 0; index < node_options.length; ++index) {\n      let c = node_options[index];\n\n      // Backslashes escape the following character\n      if (c === '\\\\' && is_in_string) {\n          if (index + 1 === node_options.length) {\n              errors.push(\"invalid value for NODE_OPTIONS \" +\n                  \"(invalid escape)\\n\");\n              return env_argv;\n          } else {\n              c = node_options[++index];\n          }\n      } else if (c === ' ' && !is_in_string) {\n          will_start_new_arg = true;\n          continue;\n      } else if (c === '\"') {\n          is_in_string = !is_in_string;\n          continue;\n      }\n\n      if (will_start_new_arg) {\n          env_argv.push(c);\n          will_start_new_arg = false;\n      } else {\n          env_argv[env_argv.length - 1] += c;\n      }\n  }\n\n  if (is_in_string) {\n      errors.push(\"invalid value for NODE_OPTIONS \" +\n          \"(unterminated string)\\n\");\n  }\n  return env_argv;\n}\n\n// Get option values that can be specified via env vars besides NODE_OPTIONS\nfunction getOptionValuesFromOtherEnvVars() {\n  const options = {};\n  if(process.env.NODE_PENDING_DEPRECATION === '1') {\n    options['--pending-deprecation'] = true;\n  }\n  return options;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}