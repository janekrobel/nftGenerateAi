{"ast":null,"code":"import detectEthereumProvider from '@metamask/detect-provider';\nlet message;\nlet account;\nconst provider = await detectEthereumProvider();\nif (provider) {\n  // From now on, this should always be true:\n  // provider === window.ethereum\n  startApp(provider); // initialize your app\n} else {\n  console.log('Please install MetaMask!');\n}\nconnectMetamask = async () => {\n  try {\n    const accounts = await window.ethereum.request({\n      method: \"eth_requestAccounts\"\n    });\n    account = accounts[0];\n    switchNetwork();\n  } catch (err) {\n    message = \"Metamask: Failed to connect to Metamask...\";\n  }\n  console.log(account[0]);\n};\nconst switchNetwork = async () => {\n  try {\n    await window.ethereum.request({\n      method: \"wallet_switchEthereumChain\",\n      params: [{\n        chainId: \"0x13881\"\n      }]\n    });\n    //chain id for polygon = \"0x89\"\n\n    message = \"Metamask: Succesfuly Connected to Metamask\";\n  } catch (switchError) {\n    if (switchError.code === 4902) {\n      message = \"Metamask: Add polygon to your wallet\";\n    } else {\n      message = \"Metamask: Cannot switch to the network\";\n    }\n  }\n};","map":{"version":3,"names":["detectEthereumProvider","message","account","provider","startApp","console","log","connectMetamask","accounts","window","ethereum","request","method","switchNetwork","err","params","chainId","switchError","code"],"sources":["/Users/janrobel/Documents/PersonalProjekty/nftGenerateAi/client/src/connectMetamask.js"],"sourcesContent":["import detectEthereumProvider from '@metamask/detect-provider';\n\nlet message;\nlet account;\n\nconst provider = await detectEthereumProvider();\n\nif (provider) {\n  // From now on, this should always be true:\n  // provider === window.ethereum\n  startApp(provider); // initialize your app\n} else {\n  console.log('Please install MetaMask!');\n}\n\nconnectMetamask = async () => {  \n    try {\n      const accounts = await window.ethereum.request({ method: \"eth_requestAccounts\" });\n      account = accounts[0];\n      switchNetwork();\n    } catch (err) {\n      message = \"Metamask: Failed to connect to Metamask...\";\n    }\n  \n    console.log(account[0]);\n  };\n  \n  const switchNetwork = async () => {\n    try {\n      await window.ethereum.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId: \"0x13881\" }],\n      });\n      //chain id for polygon = \"0x89\"\n  \n      message = \"Metamask: Succesfuly Connected to Metamask\";\n    } catch (switchError) {\n      if (switchError.code === 4902) {\n        message = \"Metamask: Add polygon to your wallet\";\n      } else {\n        message = \"Metamask: Cannot switch to the network\";\n      }\n    }\n  };"],"mappings":"AAAA,OAAOA,sBAAsB,MAAM,2BAA2B;AAE9D,IAAIC,OAAO;AACX,IAAIC,OAAO;AAEX,MAAMC,QAAQ,GAAG,MAAMH,sBAAsB,EAAE;AAE/C,IAAIG,QAAQ,EAAE;EACZ;EACA;EACAC,QAAQ,CAACD,QAAQ,CAAC,CAAC,CAAC;AACtB,CAAC,MAAM;EACLE,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;AACzC;AAEAC,eAAe,GAAG,YAAY;EAC1B,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC;MAAEC,MAAM,EAAE;IAAsB,CAAC,CAAC;IACjFV,OAAO,GAAGM,QAAQ,CAAC,CAAC,CAAC;IACrBK,aAAa,EAAE;EACjB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZb,OAAO,GAAG,4CAA4C;EACxD;EAEAI,OAAO,CAACC,GAAG,CAACJ,OAAO,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC;AAED,MAAMW,aAAa,GAAG,YAAY;EAChC,IAAI;IACF,MAAMJ,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC;MAC5BC,MAAM,EAAE,4BAA4B;MACpCG,MAAM,EAAE,CAAC;QAAEC,OAAO,EAAE;MAAU,CAAC;IACjC,CAAC,CAAC;IACF;;IAEAf,OAAO,GAAG,4CAA4C;EACxD,CAAC,CAAC,OAAOgB,WAAW,EAAE;IACpB,IAAIA,WAAW,CAACC,IAAI,KAAK,IAAI,EAAE;MAC7BjB,OAAO,GAAG,sCAAsC;IAClD,CAAC,MAAM;MACLA,OAAO,GAAG,wCAAwC;IACpD;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}