{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nconst debug_1 = __importDefault(require(\"debug\"));\nconst context_1 = require(\"../context\");\nconst config_loading_1 = require(\"../core/config/config-loading\");\nconst errors_1 = require(\"../core/errors\");\nconst errors_list_1 = require(\"../core/errors-list\");\nconst env_variables_1 = require(\"../core/params/env-variables\");\nconst hardhat_params_1 = require(\"../core/params/hardhat-params\");\nconst runtime_environment_1 = require(\"../core/runtime-environment\");\nlet ctx;\nlet env;\nif (context_1.HardhatContext.isCreated()) {\n  ctx = context_1.HardhatContext.getHardhatContext();\n  // The most probable reason for this to happen is that this file was imported\n  // from the config file\n  if (ctx.environment === undefined) {\n    throw new errors_1.HardhatError(errors_list_1.ERRORS.GENERAL.LIB_IMPORTED_FROM_THE_CONFIG);\n  }\n  env = ctx.environment;\n} else {\n  ctx = context_1.HardhatContext.createHardhatContext();\n  const hardhatArguments = (0, env_variables_1.getEnvHardhatArguments)(hardhat_params_1.HARDHAT_PARAM_DEFINITIONS, process.env);\n  if (hardhatArguments.verbose) {\n    debug_1.default.enable(\"hardhat*\");\n  }\n  const {\n    resolvedConfig,\n    userConfig\n  } = (0, config_loading_1.loadConfigAndTasks)(hardhatArguments);\n  env = new runtime_environment_1.Environment(resolvedConfig, hardhatArguments, ctx.tasksDSL.getTaskDefinitions(), ctx.extendersManager.getExtenders(), ctx.experimentalHardhatNetworkMessageTraceHooks, userConfig);\n  ctx.setHardhatRuntimeEnvironment(env);\n}\nmodule.exports = env;","map":{"version":3,"mappings":";;;;;;;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,GAAmB;AACvB,IAAIC,GAA8B;AAElC,IAAIC,wBAAc,CAACC,SAAS,EAAE,EAAE;EAC9BH,GAAG,GAAGE,wBAAc,CAACE,iBAAiB,EAAE;EAExC;EACA;EACA,IAAIJ,GAAG,CAACK,WAAW,KAAKC,SAAS,EAAE;IACjC,MAAM,IAAIC,qBAAY,CAACC,oBAAM,CAACC,OAAO,CAACC,4BAA4B,CAAC;;EAGrET,GAAG,GAAGD,GAAG,CAACK,WAAW;CACtB,MAAM;EACLL,GAAG,GAAGE,wBAAc,CAACS,oBAAoB,EAAE;EAE3C,MAAMC,gBAAgB,GAAG,0CAAsB,EAC7CC,0CAAyB,EACzBC,OAAO,CAACb,GAAG,CACZ;EAED,IAAIW,gBAAgB,CAACG,OAAO,EAAE;IAC5BC,eAAK,CAACC,MAAM,CAAC,UAAU,CAAC;;EAG1B,MAAM;IAAEC,cAAc;IAAEC;EAAU,CAAE,GAAG,uCAAkB,EAACP,gBAAgB,CAAC;EAE3EX,GAAG,GAAG,IAAImB,iCAAW,CACnBF,cAAc,EACdN,gBAAgB,EAChBZ,GAAG,CAACqB,QAAQ,CAACC,kBAAkB,EAAE,EACjCtB,GAAG,CAACuB,gBAAgB,CAACC,YAAY,EAAE,EACnCxB,GAAG,CAACyB,2CAA2C,EAC/CN,UAAU,CACX;EAEDnB,GAAG,CAAC0B,4BAA4B,CAACzB,GAAG,CAAC;;AAGvC0B,iBAAS1B,GAAG","names":["ctx","env","context_1","isCreated","getHardhatContext","environment","undefined","errors_1","errors_list_1","GENERAL","LIB_IMPORTED_FROM_THE_CONFIG","createHardhatContext","hardhatArguments","hardhat_params_1","process","verbose","debug_1","enable","resolvedConfig","userConfig","runtime_environment_1","tasksDSL","getTaskDefinitions","extendersManager","getExtenders","experimentalHardhatNetworkMessageTraceHooks","setHardhatRuntimeEnvironment","module"],"sources":["/Users/janrobel/Documents/PersonalProjekty/nftGenerateAi/clientAndContract/node_modules/hardhat/src/internal/lib/hardhat-lib.ts"],"sourcesContent":["import debug from \"debug\";\n\nimport { HardhatRuntimeEnvironment } from \"../../types\";\nimport { HardhatContext } from \"../context\";\nimport { loadConfigAndTasks } from \"../core/config/config-loading\";\nimport { HardhatError } from \"../core/errors\";\nimport { ERRORS } from \"../core/errors-list\";\nimport { getEnvHardhatArguments } from \"../core/params/env-variables\";\nimport { HARDHAT_PARAM_DEFINITIONS } from \"../core/params/hardhat-params\";\nimport { Environment } from \"../core/runtime-environment\";\n\nlet ctx: HardhatContext;\nlet env: HardhatRuntimeEnvironment;\n\nif (HardhatContext.isCreated()) {\n  ctx = HardhatContext.getHardhatContext();\n\n  // The most probable reason for this to happen is that this file was imported\n  // from the config file\n  if (ctx.environment === undefined) {\n    throw new HardhatError(ERRORS.GENERAL.LIB_IMPORTED_FROM_THE_CONFIG);\n  }\n\n  env = ctx.environment;\n} else {\n  ctx = HardhatContext.createHardhatContext();\n\n  const hardhatArguments = getEnvHardhatArguments(\n    HARDHAT_PARAM_DEFINITIONS,\n    process.env\n  );\n\n  if (hardhatArguments.verbose) {\n    debug.enable(\"hardhat*\");\n  }\n\n  const { resolvedConfig, userConfig } = loadConfigAndTasks(hardhatArguments);\n\n  env = new Environment(\n    resolvedConfig,\n    hardhatArguments,\n    ctx.tasksDSL.getTaskDefinitions(),\n    ctx.extendersManager.getExtenders(),\n    ctx.experimentalHardhatNetworkMessageTraceHooks,\n    userConfig\n  );\n\n  ctx.setHardhatRuntimeEnvironment(env);\n}\n\nexport = env;\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}