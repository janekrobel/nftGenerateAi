{"ast":null,"code":"var _jsxFileName = \"/Users/janrobel/Documents/PersonalProjekty/nftGenerateAi/clientAndContract/src/MyNfts.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst contractModel = require(\"./contractModel.js\");\nfunction MyNfts() {\n  _s();\n  const [listOfLinks, setListOfLinks] = useState([]);\n  const [isRendered, setIsRendered] = useState(false);\n  const {\n    isConnected\n  } = useSelector(state => state.isConnected);\n  useEffect(() => {\n    if (isConnected && !isRendered) {\n      ReadLinks();\n    }\n  }, [isConnected, isRendered]);\n  const ReadLinks = () => {\n    contractModel.getAllLinks().then(_listOfLinks => {\n      setListOfLinks(_listOfLinks);\n      setIsRendered(true);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  if (!isConnected) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"myNftText\",\n        children: \"My Nfts:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"errorMessage\",\n        children: \"*Connect to Metamask First*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  } else if (isConnected && !isRendered) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"myNftText\",\n        children: \"My Nfts:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"errorMessage\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"myNftText\",\n        children: \"My Nfts:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), listOfLinks.map(link => {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"myNftImage\",\n          src: \"ipfs.io/ipfs/\" + link\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 28\n        }, this);\n      })]\n    }, void 0, true);\n  }\n}\n_s(MyNfts, \"RL/JgIdBvjIe5Dhozc0HygDy/cU=\", false, function () {\n  return [useSelector];\n});\n_c = MyNfts;\nexport default MyNfts;\nvar _c;\n$RefreshReg$(_c, \"MyNfts\");","map":{"version":3,"names":["useEffect","useState","useSelector","contractModel","require","MyNfts","listOfLinks","setListOfLinks","isRendered","setIsRendered","isConnected","state","ReadLinks","getAllLinks","then","_listOfLinks","catch","error","console","log","map","link"],"sources":["/Users/janrobel/Documents/PersonalProjekty/nftGenerateAi/clientAndContract/src/MyNfts.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"./index.css\";\nconst contractModel = require(\"./contractModel.js\");\n\nfunction MyNfts(){\n    const [listOfLinks, setListOfLinks] = useState([]);\n    const [isRendered,setIsRendered] = useState(false);\n\n    const { isConnected } = useSelector((state) => state.isConnected);\n\n    useEffect(() => {\n        if(isConnected && !isRendered) {\n            ReadLinks();\n        }\n    }, [isConnected, isRendered]);\n\n    const ReadLinks = () => {\n        contractModel.getAllLinks().then((_listOfLinks) => {\n            setListOfLinks(_listOfLinks);\n            setIsRendered(true);\n        }).catch(error => {\n            console.log(error);\n        });\n    }\n\n    if(!isConnected){\n        return(\n            <>\n                <p className=\"myNftText\">My Nfts:</p>\n                <p className=\"errorMessage\">*Connect to Metamask First*</p>\n            </>\n        );\n    }\n    else if(isConnected && !isRendered){\n        return(\n            <>\n                <p className=\"myNftText\">My Nfts:</p>\n                <p className=\"errorMessage\">Loading...</p>\n            </>\n        );\n    }\n    else{\n        return(\n            <>\n                <p className=\"myNftText\">My Nfts:</p>\n                {listOfLinks.map((link) => {\n                    return <img className=\"myNftImage\" src={\"ipfs.io/ipfs/\" + link}/>;\n                })}\n            </>\n        );\n    }\n}\nexport default MyNfts;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAO,aAAa;AAAC;AAAA;AACrB,MAAMC,aAAa,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AAEnD,SAASC,MAAM,GAAE;EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACO,UAAU,EAACC,aAAa,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAElD,MAAM;IAAES;EAAY,CAAC,GAAGR,WAAW,CAAES,KAAK,IAAKA,KAAK,CAACD,WAAW,CAAC;EAEjEV,SAAS,CAAC,MAAM;IACZ,IAAGU,WAAW,IAAI,CAACF,UAAU,EAAE;MAC3BI,SAAS,EAAE;IACf;EACJ,CAAC,EAAE,CAACF,WAAW,EAAEF,UAAU,CAAC,CAAC;EAE7B,MAAMI,SAAS,GAAG,MAAM;IACpBT,aAAa,CAACU,WAAW,EAAE,CAACC,IAAI,CAAEC,YAAY,IAAK;MAC/CR,cAAc,CAACQ,YAAY,CAAC;MAC5BN,aAAa,CAAC,IAAI,CAAC;IACvB,CAAC,CAAC,CAACO,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB,CAAC,CAAC;EACN,CAAC;EAED,IAAG,CAACP,WAAW,EAAC;IACZ,oBACI;MAAA,wBACI;QAAG,SAAS,EAAC,WAAW;QAAA,UAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAI,eACrC;QAAG,SAAS,EAAC,cAAc;QAAA,UAAC;MAA2B;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA,gBAC5D;EAEX,CAAC,MACI,IAAGA,WAAW,IAAI,CAACF,UAAU,EAAC;IAC/B,oBACI;MAAA,wBACI;QAAG,SAAS,EAAC,WAAW;QAAA,UAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAI,eACrC;QAAG,SAAS,EAAC,cAAc;QAAA,UAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA,gBAC3C;EAEX,CAAC,MACG;IACA,oBACI;MAAA,wBACI;QAAG,SAAS,EAAC,WAAW;QAAA,UAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAI,EACpCF,WAAW,CAACc,GAAG,CAAEC,IAAI,IAAK;QACvB,oBAAO;UAAK,SAAS,EAAC,YAAY;UAAC,GAAG,EAAE,eAAe,GAAGA;QAAK;UAAA;UAAA;UAAA;QAAA,QAAE;MACrE,CAAC,CAAC;IAAA,gBACH;EAEX;AACJ;AAAC,GA/CQhB,MAAM;EAAA,QAIaH,WAAW;AAAA;AAAA,KAJ9BG,MAAM;AAgDf,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}