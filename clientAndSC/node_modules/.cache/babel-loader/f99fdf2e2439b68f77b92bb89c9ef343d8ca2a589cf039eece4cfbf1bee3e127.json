{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst debug_1 = __importDefault(require(\"debug\"));\nconst fs_extra_1 = __importDefault(require(\"fs-extra\"));\nconst config_env_1 = require(\"../internal/core/config/config-env\");\nconst errors_1 = require(\"../internal/core/errors\");\nconst errors_list_1 = require(\"../internal/core/errors-list\");\nconst scripts_runner_1 = require(\"../internal/util/scripts-runner\");\nconst task_names_1 = require(\"./task-names\");\nconst log = (0, debug_1.default)(\"hardhat:core:tasks:run\");\n(0, config_env_1.task)(task_names_1.TASK_RUN, \"Runs a user-defined script after compiling the project\").addPositionalParam(\"script\", \"A js file to be run within hardhat's environment\").addFlag(\"noCompile\", \"Don't compile before running this task\").setAction(async (_ref, _ref2) => {\n  let {\n    script,\n    noCompile\n  } = _ref;\n  let {\n    run,\n    hardhatArguments\n  } = _ref2;\n  if (!(await fs_extra_1.default.pathExists(script))) {\n    throw new errors_1.HardhatError(errors_list_1.ERRORS.BUILTIN_TASKS.RUN_FILE_NOT_FOUND, {\n      script\n    });\n  }\n  if (!noCompile) {\n    await run(task_names_1.TASK_COMPILE, {\n      quiet: true\n    });\n  }\n  log(`Running script ${script} in a subprocess so we can wait for it to complete`);\n  try {\n    process.exitCode = await (0, scripts_runner_1.runScriptWithHardhat)(hardhatArguments, script);\n  } catch (error) {\n    if (error instanceof Error) {\n      throw new errors_1.HardhatError(errors_list_1.ERRORS.BUILTIN_TASKS.RUN_SCRIPT_ERROR, {\n        script,\n        error: error.message\n      }, error);\n    }\n    // eslint-disable-next-line @nomiclabs/hardhat-internal-rules/only-hardhat-error\n    throw error;\n  }\n});","map":{"version":3,"mappings":";;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA,MAAMA,GAAG,GAAG,mBAAK,EAAC,wBAAwB,CAAC;AAE3C,qBAAI,EAACC,qBAAQ,EAAE,wDAAwD,CAAC,CACrEC,kBAAkB,CACjB,QAAQ,EACR,kDAAkD,CACnD,CACAC,OAAO,CAAC,WAAW,EAAE,wCAAwC,CAAC,CAC9DC,SAAS,CACR,uBAGI;EAAA,IAFF;IAAEC,MAAM;IAAEC;EAAS,CAA0C;EAAA,IAC7D;IAAEC,GAAG;IAAEC;EAAgB,CAAE;EAEzB,IAAI,EAAE,MAAMC,kBAAO,CAACC,UAAU,CAACL,MAAM,CAAC,CAAC,EAAE;IACvC,MAAM,IAAIM,qBAAY,CAACC,oBAAM,CAACC,aAAa,CAACC,kBAAkB,EAAE;MAC9DT;KACD,CAAC;;EAGJ,IAAI,CAACC,SAAS,EAAE;IACd,MAAMC,GAAG,CAACN,yBAAY,EAAE;MAAEc,KAAK,EAAE;IAAI,CAAE,CAAC;;EAG1Cf,GAAG,CACD,kBAAkBK,MAAM,oDAAoD,CAC7E;EAED,IAAI;IACFW,OAAO,CAACC,QAAQ,GAAG,MAAM,yCAAoB,EAACT,gBAAgB,EAAEH,MAAM,CAAC;GACxE,CAAC,OAAOa,KAAK,EAAE;IACd,IAAIA,KAAK,YAAYC,KAAK,EAAE;MAC1B,MAAM,IAAIR,qBAAY,CACpBC,oBAAM,CAACC,aAAa,CAACO,gBAAgB,EACrC;QACEf,MAAM;QACNa,KAAK,EAAEA,KAAK,CAACG;OACd,EACDH,KAAK,CACN;;IAGH;IACA,MAAMA,KAAK;;AAEf,CAAC,CACF","names":["log","task_names_1","addPositionalParam","addFlag","setAction","script","noCompile","run","hardhatArguments","fs_extra_1","pathExists","errors_1","errors_list_1","BUILTIN_TASKS","RUN_FILE_NOT_FOUND","quiet","process","exitCode","error","Error","RUN_SCRIPT_ERROR","message"],"sources":["/Users/janrobel/Documents/PersonalProjekty/nftGenerateAi/clientAndContract/node_modules/hardhat/src/builtin-tasks/run.ts"],"sourcesContent":["import debug from \"debug\";\nimport fsExtra from \"fs-extra\";\n\nimport { task } from \"../internal/core/config/config-env\";\nimport { HardhatError } from \"../internal/core/errors\";\nimport { ERRORS } from \"../internal/core/errors-list\";\nimport { runScriptWithHardhat } from \"../internal/util/scripts-runner\";\n\nimport { TASK_COMPILE, TASK_RUN } from \"./task-names\";\n\nconst log = debug(\"hardhat:core:tasks:run\");\n\ntask(TASK_RUN, \"Runs a user-defined script after compiling the project\")\n  .addPositionalParam(\n    \"script\",\n    \"A js file to be run within hardhat's environment\"\n  )\n  .addFlag(\"noCompile\", \"Don't compile before running this task\")\n  .setAction(\n    async (\n      { script, noCompile }: { script: string; noCompile: boolean },\n      { run, hardhatArguments }\n    ) => {\n      if (!(await fsExtra.pathExists(script))) {\n        throw new HardhatError(ERRORS.BUILTIN_TASKS.RUN_FILE_NOT_FOUND, {\n          script,\n        });\n      }\n\n      if (!noCompile) {\n        await run(TASK_COMPILE, { quiet: true });\n      }\n\n      log(\n        `Running script ${script} in a subprocess so we can wait for it to complete`\n      );\n\n      try {\n        process.exitCode = await runScriptWithHardhat(hardhatArguments, script);\n      } catch (error) {\n        if (error instanceof Error) {\n          throw new HardhatError(\n            ERRORS.BUILTIN_TASKS.RUN_SCRIPT_ERROR,\n            {\n              script,\n              error: error.message,\n            },\n            error\n          );\n        }\n\n        // eslint-disable-next-line @nomiclabs/hardhat-internal-rules/only-hardhat-error\n        throw error;\n      }\n    }\n  );\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}