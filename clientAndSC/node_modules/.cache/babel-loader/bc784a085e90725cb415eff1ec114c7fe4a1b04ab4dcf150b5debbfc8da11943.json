{"ast":null,"code":"var _jsxFileName = \"/Users/janrobel/Documents/PersonalProjekty/nftGenerateAi/clientAndContract/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport \"./index.css\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractModel = require('./contractModel.js');\nfunction App() {\n  _s();\n  const [generated, setGenerated] = useState(false);\n  const [nftParameters, setNftParameters] = useState(\"\");\n  const [imageLink, setImageLink] = useState(\"\");\n  const [loadingText, setLoadingText] = useState(\"Your Nft is being Generated...\");\n  useEffect(() => {\n    console.log(\"useEffect\");\n  }, [generated, imageLink, loadingText]);\n  const {\n    isConnected\n  } = useSelector(state => state.isConnected.isConnected);\n  const generateNft = async () => {\n    const link = await axios.get(`http://localhost:3001/?aiParams=${nftParameters}`);\n    return link.data;\n  };\n  const handleChange = e => {\n    setNftParameters(e.target.value);\n  };\n  const handleSubmit = () => {\n    if (nftParameters == \"\") {} else {\n      generateNft().then(data => {\n        loadingText = \"Your ai generatedNft is ready\";\n        console.log(\"xd\");\n        setImageLink(data);\n      });\n      setGenerated(true);\n    }\n  };\n  const handleMint = () => {\n    if (isConnected) {\n      contractModel.mint(imageLink);\n    } else {\n      setLoadingText(\"Connect your wallet first!\");\n    }\n  };\n  if (!generated) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mainText\",\n        children: \"Mint your ideas!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"subText\",\n        children: \"Ai generated Nfts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"generateBar\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          className: \"textInput\",\n          placeholder: \"Eg. Bored monkey wearing a rolex\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          className: \"generateButton\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"../UI/button4.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 79\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"generatedText\",\n        children: loadingText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"imageNft\",\n        src: imageLink\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mintButton\",\n        onClick: handleMint,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageLink ? \"../UI/Button3.png\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 69\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  }\n}\n_s(App, \"pFFDnDn7u+qGSylrOE/qgRxLY0o=\", false, function () {\n  return [useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","axios","useSelector","contractModel","require","App","generated","setGenerated","nftParameters","setNftParameters","imageLink","setImageLink","loadingText","setLoadingText","console","log","isConnected","state","generateNft","link","get","data","handleChange","e","target","value","handleSubmit","then","handleMint","mint"],"sources":["/Users/janrobel/Documents/PersonalProjekty/nftGenerateAi/clientAndContract/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport \"./index.css\";\nimport { useSelector } from \"react-redux\";\nconst contractModel = require('./contractModel.js');\n\nfunction App(){\n\n    const [generated, setGenerated] = useState(false);\n    const [nftParameters, setNftParameters] = useState(\"\");\n    const [imageLink, setImageLink] = useState(\"\");\n    const [loadingText, setLoadingText] = useState(\"Your Nft is being Generated...\");\n\n    useEffect(() => {console.log(\"useEffect\")}, [generated,imageLink,loadingText]);\n\n    const {isConnected} = useSelector((state) => state.isConnected.isConnected)\n\n    const generateNft = async () => {\n        const link = await axios.get(`http://localhost:3001/?aiParams=${nftParameters}`);\n        return(link.data);\n    }\n\n    const handleChange = (e) =>{\n        setNftParameters(e.target.value);\n    }\n    \n\n    const handleSubmit = () => {\n        if(nftParameters == \"\"){\n\n        }\n        else{\n            generateNft().then((data) => {\n                loadingText = \"Your ai generatedNft is ready\";\n                console.log(\"xd\");\n                setImageLink(data); \n            });\n            setGenerated(true);\n        }\n    }\n\n    const handleMint = () => {\n        if(isConnected){\n            contractModel.mint(imageLink);\n        }\n        else{\n            setLoadingText(\"Connect your wallet first!\");\n        }\n       \n    }\n    if(!generated){\n        return (\n            <div>\n                <p className=\"mainText\">\n                    Mint your ideas!\n                </p> \n                <p className=\"subText\">\n                    Ai generated Nfts\n                </p>\n                <div className=\"generateBar\">\n                    <input onChange={handleChange} className=\"textInput\" placeholder=\"Eg. Bored monkey wearing a rolex\"></input>\n                    <button onClick={handleSubmit} className=\"generateButton\"><img src=\"../UI/button4.png\"/></button>\n                </div>\n            </div>\n            );\n    }\n    else{\n        return(\n            <div>\n                <p className=\"generatedText\">{loadingText}</p>\n                <img className=\"imageNft\" src={imageLink}/>\n                <button className=\"mintButton\" onClick={handleMint}><img src={imageLink?\"../UI/Button3.png\":\"\"}/></button>\n            </div>\n        );\n        \n    }\n    \n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}