{"ast":null,"code":"/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/typedef */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isThenable } from './is';\n/** SyncPromise internal states */\nvar States;\n(function (States) {\n  /** Pending */\n  States[\"PENDING\"] = \"PENDING\";\n  /** Resolved / OK */\n  States[\"RESOLVED\"] = \"RESOLVED\";\n  /** Rejected / Error */\n  States[\"REJECTED\"] = \"REJECTED\";\n})(States || (States = {}));\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nvar SyncPromise = /** @class */function () {\n  function SyncPromise(executor) {\n    var _this = this;\n    this._state = States.PENDING;\n    this._handlers = [];\n    /** JSDoc */\n    this._resolve = function (value) {\n      _this._setResult(States.RESOLVED, value);\n    };\n    /** JSDoc */\n    this._reject = function (reason) {\n      _this._setResult(States.REJECTED, reason);\n    };\n    /** JSDoc */\n    this._setResult = function (state, value) {\n      if (_this._state !== States.PENDING) {\n        return;\n      }\n      if (isThenable(value)) {\n        value.then(_this._resolve, _this._reject);\n        return;\n      }\n      _this._state = state;\n      _this._value = value;\n      _this._executeHandlers();\n    };\n    // TODO: FIXME\n    /** JSDoc */\n    this._attachHandler = function (handler) {\n      _this._handlers = _this._handlers.concat(handler);\n      _this._executeHandlers();\n    };\n    /** JSDoc */\n    this._executeHandlers = function () {\n      if (_this._state === States.PENDING) {\n        return;\n      }\n      var cachedHandlers = _this._handlers.slice();\n      _this._handlers = [];\n      cachedHandlers.forEach(function (handler) {\n        if (handler.done) {\n          return;\n        }\n        if (_this._state === States.RESOLVED) {\n          if (handler.onfulfilled) {\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            handler.onfulfilled(_this._value);\n          }\n        }\n        if (_this._state === States.REJECTED) {\n          if (handler.onrejected) {\n            handler.onrejected(_this._value);\n          }\n        }\n        handler.done = true;\n      });\n    };\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n  /** JSDoc */\n  SyncPromise.resolve = function (value) {\n    return new SyncPromise(function (resolve) {\n      resolve(value);\n    });\n  };\n  /** JSDoc */\n  SyncPromise.reject = function (reason) {\n    return new SyncPromise(function (_, reject) {\n      reject(reason);\n    });\n  };\n  /** JSDoc */\n  SyncPromise.all = function (collection) {\n    return new SyncPromise(function (resolve, reject) {\n      if (!Array.isArray(collection)) {\n        reject(new TypeError(\"Promise.all requires an array as input.\"));\n        return;\n      }\n      if (collection.length === 0) {\n        resolve([]);\n        return;\n      }\n      var counter = collection.length;\n      var resolvedCollection = [];\n      collection.forEach(function (item, index) {\n        SyncPromise.resolve(item).then(function (value) {\n          resolvedCollection[index] = value;\n          counter -= 1;\n          if (counter !== 0) {\n            return;\n          }\n          resolve(resolvedCollection);\n        }).then(null, reject);\n      });\n    });\n  };\n  /** JSDoc */\n  SyncPromise.prototype.then = function (onfulfilled, onrejected) {\n    var _this = this;\n    return new SyncPromise(function (resolve, reject) {\n      _this._attachHandler({\n        done: false,\n        onfulfilled: function (result) {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result);\n            return;\n          }\n          try {\n            resolve(onfulfilled(result));\n            return;\n          } catch (e) {\n            reject(e);\n            return;\n          }\n        },\n        onrejected: function (reason) {\n          if (!onrejected) {\n            reject(reason);\n            return;\n          }\n          try {\n            resolve(onrejected(reason));\n            return;\n          } catch (e) {\n            reject(e);\n            return;\n          }\n        }\n      });\n    });\n  };\n  /** JSDoc */\n  SyncPromise.prototype.catch = function (onrejected) {\n    return this.then(function (val) {\n      return val;\n    }, onrejected);\n  };\n  /** JSDoc */\n  SyncPromise.prototype.finally = function (onfinally) {\n    var _this = this;\n    return new SyncPromise(function (resolve, reject) {\n      var val;\n      var isRejected;\n      return _this.then(function (value) {\n        isRejected = false;\n        val = value;\n        if (onfinally) {\n          onfinally();\n        }\n      }, function (reason) {\n        isRejected = true;\n        val = reason;\n        if (onfinally) {\n          onfinally();\n        }\n      }).then(function () {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n        resolve(val);\n      });\n    });\n  };\n  /** JSDoc */\n  SyncPromise.prototype.toString = function () {\n    return '[object SyncPromise]';\n  };\n  return SyncPromise;\n}();\nexport { SyncPromise };","map":{"version":3,"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,UAAU,QAAQ,MAAM;AAEjC;AACA,IAAKC,MAOJ;AAPD,WAAKA,MAAM;EACT;EACAA,6BAAmB;EACnB;EACAA,+BAAqB;EACrB;EACAA,+BAAqB;AACvB,CAAC,EAPIA,MAAM,KAANA,MAAM;AASX;;;;AAIA;EASE,qBACEC,QAAwG;IAD1G;IARQ,WAAM,GAAWD,MAAM,CAACE,OAAO;IAC/B,cAAS,GAIZ,EAAE;IA+IP;IACiB,aAAQ,GAAG,UAACC,KAAiC;MAC5DC,KAAI,CAACC,UAAU,CAACL,MAAM,CAACM,QAAQ,EAAEH,KAAK,CAAC;IACzC,CAAC;IAED;IACiB,YAAO,GAAG,UAACI,MAAY;MACtCH,KAAI,CAACC,UAAU,CAACL,MAAM,CAACQ,QAAQ,EAAED,MAAM,CAAC;IAC1C,CAAC;IAED;IACiB,eAAU,GAAG,UAACE,KAAa,EAAEN,KAAgC;MAC5E,IAAIC,KAAI,CAACM,MAAM,KAAKV,MAAM,CAACE,OAAO,EAAE;QAClC;;MAGF,IAAIH,UAAU,CAACI,KAAK,CAAC,EAAE;QACpBA,KAAwB,CAACQ,IAAI,CAACP,KAAI,CAACQ,QAAQ,EAAER,KAAI,CAACS,OAAO,CAAC;QAC3D;;MAGFT,KAAI,CAACM,MAAM,GAAGD,KAAK;MACnBL,KAAI,CAACU,MAAM,GAAGX,KAAK;MAEnBC,KAAI,CAACW,gBAAgB,EAAE;IACzB,CAAC;IAED;IACA;IACiB,mBAAc,GAAG,UAACC,OAOlC;MACCZ,KAAI,CAACa,SAAS,GAAGb,KAAI,CAACa,SAAS,CAACC,MAAM,CAACF,OAAO,CAAC;MAC/CZ,KAAI,CAACW,gBAAgB,EAAE;IACzB,CAAC;IAED;IACiB,qBAAgB,GAAG;MAClC,IAAIX,KAAI,CAACM,MAAM,KAAKV,MAAM,CAACE,OAAO,EAAE;QAClC;;MAGF,IAAMiB,cAAc,GAAGf,KAAI,CAACa,SAAS,CAACG,KAAK,EAAE;MAC7ChB,KAAI,CAACa,SAAS,GAAG,EAAE;MAEnBE,cAAc,CAACE,OAAO,CAAC,iBAAO;QAC5B,IAAIL,OAAO,CAACM,IAAI,EAAE;UAChB;;QAGF,IAAIlB,KAAI,CAACM,MAAM,KAAKV,MAAM,CAACM,QAAQ,EAAE;UACnC,IAAIU,OAAO,CAACO,WAAW,EAAE;YACvB;YACAP,OAAO,CAACO,WAAW,CAAEnB,KAAI,CAACU,MAAyB,CAAC;;;QAIxD,IAAIV,KAAI,CAACM,MAAM,KAAKV,MAAM,CAACQ,QAAQ,EAAE;UACnC,IAAIQ,OAAO,CAACQ,UAAU,EAAE;YACtBR,OAAO,CAACQ,UAAU,CAACpB,KAAI,CAACU,MAAM,CAAC;;;QAInCE,OAAO,CAACM,IAAI,GAAG,IAAI;MACrB,CAAC,CAAC;IACJ,CAAC;IA/MC,IAAI;MACFrB,QAAQ,CAAC,IAAI,CAACW,QAAQ,EAAE,IAAI,CAACC,OAAO,CAAC;KACtC,CAAC,OAAOY,CAAC,EAAE;MACV,IAAI,CAACZ,OAAO,CAACY,CAAC,CAAC;;EAEnB;EAEA;EACcC,mBAAO,GAArB,UAAyBvB,KAAyB;IAChD,OAAO,IAAIuB,WAAW,CAAC,iBAAO;MAC5BC,OAAO,CAACxB,KAAK,CAAC;IAChB,CAAC,CAAC;EACJ,CAAC;EAED;EACcuB,kBAAM,GAApB,UAAgCnB,MAAY;IAC1C,OAAO,IAAImB,WAAW,CAAC,UAACE,CAAC,EAAEC,MAAM;MAC/BA,MAAM,CAACtB,MAAM,CAAC;IAChB,CAAC,CAAC;EACJ,CAAC;EAED;EACcmB,eAAG,GAAjB,UAA2BI,UAAqC;IAC9D,OAAO,IAAIJ,WAAW,CAAM,UAACC,OAAO,EAAEE,MAAM;MAC1C,IAAI,CAACE,KAAK,CAACC,OAAO,CAACF,UAAU,CAAC,EAAE;QAC9BD,MAAM,CAAC,IAAII,SAAS,CAAC,yCAAyC,CAAC,CAAC;QAChE;;MAGF,IAAIH,UAAU,CAACI,MAAM,KAAK,CAAC,EAAE;QAC3BP,OAAO,CAAC,EAAE,CAAC;QACX;;MAGF,IAAIQ,OAAO,GAAGL,UAAU,CAACI,MAAM;MAC/B,IAAME,kBAAkB,GAAQ,EAAE;MAElCN,UAAU,CAACT,OAAO,CAAC,UAACgB,IAAI,EAAEC,KAAK;QAC7BZ,WAAW,CAACC,OAAO,CAACU,IAAI,CAAC,CACtB1B,IAAI,CAAC,eAAK;UACTyB,kBAAkB,CAACE,KAAK,CAAC,GAAGnC,KAAK;UACjCgC,OAAO,IAAI,CAAC;UAEZ,IAAIA,OAAO,KAAK,CAAC,EAAE;YACjB;;UAEFR,OAAO,CAACS,kBAAkB,CAAC;QAC7B,CAAC,CAAC,CACDzB,IAAI,CAAC,IAAI,EAAEkB,MAAM,CAAC;MACvB,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC;EAED;EACOH,0BAAI,GAAX,UACEH,WAAqE,EACrEC,UAAuE;IAFzE;IAIE,OAAO,IAAIE,WAAW,CAAC,UAACC,OAAO,EAAEE,MAAM;MACrCzB,KAAI,CAACmC,cAAc,CAAC;QAClBjB,IAAI,EAAE,KAAK;QACXC,WAAW,EAAE,gBAAM;UACjB,IAAI,CAACA,WAAW,EAAE;YAChB;YACA;YACAI,OAAO,CAACa,MAAa,CAAC;YACtB;;UAEF,IAAI;YACFb,OAAO,CAACJ,WAAW,CAACiB,MAAM,CAAC,CAAC;YAC5B;WACD,CAAC,OAAOf,CAAC,EAAE;YACVI,MAAM,CAACJ,CAAC,CAAC;YACT;;QAEJ,CAAC;QACDD,UAAU,EAAE,gBAAM;UAChB,IAAI,CAACA,UAAU,EAAE;YACfK,MAAM,CAACtB,MAAM,CAAC;YACd;;UAEF,IAAI;YACFoB,OAAO,CAACH,UAAU,CAACjB,MAAM,CAAC,CAAC;YAC3B;WACD,CAAC,OAAOkB,CAAC,EAAE;YACVI,MAAM,CAACJ,CAAC,CAAC;YACT;;QAEJ;OACD,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC;EAED;EACOC,2BAAK,GAAZ,UACEF,UAAqE;IAErE,OAAO,IAAI,CAACb,IAAI,CAAC,aAAG;MAAI,UAAG;IAAH,CAAG,EAAEa,UAAU,CAAC;EAC1C,CAAC;EAED;EACOE,6BAAO,GAAd,UAAwBe,SAA+B;IAAvD;IACE,OAAO,IAAIf,WAAW,CAAU,UAACC,OAAO,EAAEE,MAAM;MAC9C,IAAIa,GAAkB;MACtB,IAAIC,UAAmB;MAEvB,OAAOvC,KAAI,CAACO,IAAI,CACd,eAAK;QACHgC,UAAU,GAAG,KAAK;QAClBD,GAAG,GAAGvC,KAAK;QACX,IAAIsC,SAAS,EAAE;UACbA,SAAS,EAAE;;MAEf,CAAC,EACD,gBAAM;QACJE,UAAU,GAAG,IAAI;QACjBD,GAAG,GAAGnC,MAAM;QACZ,IAAIkC,SAAS,EAAE;UACbA,SAAS,EAAE;;MAEf,CAAC,CACF,CAAC9B,IAAI,CAAC;QACL,IAAIgC,UAAU,EAAE;UACdd,MAAM,CAACa,GAAG,CAAC;UACX;;QAGFf,OAAO,CAAEe,GAAsB,CAAC;MAClC,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC;EAED;EACOhB,8BAAQ,GAAf;IACE,OAAO,sBAAsB;EAC/B,CAAC;EAyEH,kBAAC;AAAD,CAAC,EA5ND;AA8NA,SAASA,WAAW","names":["isThenable","States","executor","PENDING","value","_this","_setResult","RESOLVED","reason","REJECTED","state","_state","then","_resolve","_reject","_value","_executeHandlers","handler","_handlers","concat","cachedHandlers","slice","forEach","done","onfulfilled","onrejected","e","SyncPromise","resolve","_","reject","collection","Array","isArray","TypeError","length","counter","resolvedCollection","item","index","_attachHandler","result","onfinally","val","isRejected"],"sources":["/Users/janrobel/Documents/PersonalProjekty/nftGenerateAi/clientAndContract/node_modules/@sentry/utils/src/syncpromise.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/typedef */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isThenable } from './is';\n\n/** SyncPromise internal states */\nenum States {\n  /** Pending */\n  PENDING = 'PENDING',\n  /** Resolved / OK */\n  RESOLVED = 'RESOLVED',\n  /** Rejected / Error */\n  REJECTED = 'REJECTED',\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise<T> implements PromiseLike<T> {\n  private _state: States = States.PENDING;\n  private _handlers: Array<{\n    done: boolean;\n    onfulfilled?: ((value: T) => T | PromiseLike<T>) | null;\n    onrejected?: ((reason: any) => any) | null;\n  }> = [];\n  private _value: any;\n\n  public constructor(\n    executor: (resolve: (value?: T | PromiseLike<T> | null) => void, reject: (reason?: any) => void) => void,\n  ) {\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n  public static resolve<T>(value: T | PromiseLike<T>): PromiseLike<T> {\n    return new SyncPromise(resolve => {\n      resolve(value);\n    });\n  }\n\n  /** JSDoc */\n  public static reject<T = never>(reason?: any): PromiseLike<T> {\n    return new SyncPromise((_, reject) => {\n      reject(reason);\n    });\n  }\n\n  /** JSDoc */\n  public static all<U = any>(collection: Array<U | PromiseLike<U>>): PromiseLike<U[]> {\n    return new SyncPromise<U[]>((resolve, reject) => {\n      if (!Array.isArray(collection)) {\n        reject(new TypeError(`Promise.all requires an array as input.`));\n        return;\n      }\n\n      if (collection.length === 0) {\n        resolve([]);\n        return;\n      }\n\n      let counter = collection.length;\n      const resolvedCollection: U[] = [];\n\n      collection.forEach((item, index) => {\n        SyncPromise.resolve(item)\n          .then(value => {\n            resolvedCollection[index] = value;\n            counter -= 1;\n\n            if (counter !== 0) {\n              return;\n            }\n            resolve(resolvedCollection);\n          })\n          .then(null, reject);\n      });\n    });\n  }\n\n  /** JSDoc */\n  public then<TResult1 = T, TResult2 = never>(\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null,\n  ): PromiseLike<TResult1 | TResult2> {\n    return new SyncPromise((resolve, reject) => {\n      this._attachHandler({\n        done: false,\n        onfulfilled: result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result as any);\n            return;\n          }\n          try {\n            resolve(onfulfilled(result));\n            return;\n          } catch (e) {\n            reject(e);\n            return;\n          }\n        },\n        onrejected: reason => {\n          if (!onrejected) {\n            reject(reason);\n            return;\n          }\n          try {\n            resolve(onrejected(reason));\n            return;\n          } catch (e) {\n            reject(e);\n            return;\n          }\n        },\n      });\n    });\n  }\n\n  /** JSDoc */\n  public catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null,\n  ): PromiseLike<T | TResult> {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n  public finally<TResult>(onfinally?: (() => void) | null): PromiseLike<TResult> {\n    return new SyncPromise<TResult>((resolve, reject) => {\n      let val: TResult | any;\n      let isRejected: boolean;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve((val as unknown) as any);\n      });\n    });\n  }\n\n  /** JSDoc */\n  public toString(): string {\n    return '[object SyncPromise]';\n  }\n\n  /** JSDoc */\n  private readonly _resolve = (value?: T | PromiseLike<T> | null) => {\n    this._setResult(States.RESOLVED, value);\n  };\n\n  /** JSDoc */\n  private readonly _reject = (reason?: any) => {\n    this._setResult(States.REJECTED, reason);\n  };\n\n  /** JSDoc */\n  private readonly _setResult = (state: States, value?: T | PromiseLike<T> | any) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      (value as PromiseLike<T>).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };\n\n  // TODO: FIXME\n  /** JSDoc */\n  private readonly _attachHandler = (handler: {\n    /** JSDoc */\n    done: boolean;\n    /** JSDoc */\n    onfulfilled?(value: T): any;\n    /** JSDoc */\n    onrejected?(reason: any): any;\n  }) => {\n    this._handlers = this._handlers.concat(handler);\n    this._executeHandlers();\n  };\n\n  /** JSDoc */\n  private readonly _executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler.done) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        if (handler.onfulfilled) {\n          // eslint-disable-next-line @typescript-eslint/no-floating-promises\n          handler.onfulfilled((this._value as unknown) as any);\n        }\n      }\n\n      if (this._state === States.REJECTED) {\n        if (handler.onrejected) {\n          handler.onrejected(this._value);\n        }\n      }\n\n      handler.done = true;\n    });\n  };\n}\n\nexport { SyncPromise };\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}