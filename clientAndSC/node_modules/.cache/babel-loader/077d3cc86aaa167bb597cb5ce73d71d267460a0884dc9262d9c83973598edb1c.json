{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isRunningOnCiServer = void 0;\nconst ci_info_1 = __importDefault(require(\"ci-info\"));\nconst os_1 = __importDefault(require(\"os\"));\n// This has been tested in:\n//   - Travis CI\n//   - Circle CI\n//   - GitHub Actions\n//   - Azure Pipelines\n//\n// This should also work in this CI providers because they set process.env.CI:\n//   - AppVeyor\n//   - Bitbucket Pipelines\n//   - GitLab CI\n//\n// This should also work:\n//   - AWS CodeBuild -- Special case\n//   - Jenkins -- Using process.env.BUILD_NUMBER\n//   - ZEIT Now -- Special case\nfunction isRunningOnCiServer() {\n  return ci_info_1.default.isCI || isGithubActions() || isLinuxWithoutDisplayServer() || isNow() || isAwsCodeBuild();\n}\nexports.isRunningOnCiServer = isRunningOnCiServer;\nfunction isGithubActions() {\n  return process.env.GITHUB_ACTIONS !== undefined;\n}\nfunction isLinuxWithoutDisplayServer() {\n  if (os_1.default.type() !== \"Linux\") {\n    return false;\n  }\n  if (process.env.DISPLAY !== undefined) {\n    return false;\n  }\n  if (process.env.WAYLAND_DISPLAY !== undefined) {\n    return false;\n  }\n  return true;\n}\nfunction isNow() {\n  return process.env.NOW !== undefined || process.env.DEPLOYMENT_ID !== undefined;\n}\nfunction isAwsCodeBuild() {\n  return process.env.CODEBUILD_BUILD_NUMBER !== undefined;\n}","map":{"version":3,"mappings":";;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAgBA,mBAAmB;EACjC,OACEC,iBAAE,CAACC,IAAI,IACPC,eAAe,EAAE,IACjBC,2BAA2B,EAAE,IAC7BC,KAAK,EAAE,IACPC,cAAc,EAAE;AAEpB;AARAC;AAUA,SAASJ,eAAe;EACtB,OAAOK,OAAO,CAACC,GAAG,CAACC,cAAc,KAAKC,SAAS;AACjD;AAEA,SAASP,2BAA2B;EAClC,IAAIQ,YAAE,CAACC,IAAI,EAAE,KAAK,OAAO,EAAE;IACzB,OAAO,KAAK;;EAGd,IAAIL,OAAO,CAACC,GAAG,CAACK,OAAO,KAAKH,SAAS,EAAE;IACrC,OAAO,KAAK;;EAGd,IAAIH,OAAO,CAACC,GAAG,CAACM,eAAe,KAAKJ,SAAS,EAAE;IAC7C,OAAO,KAAK;;EAGd,OAAO,IAAI;AACb;AAEA,SAASN,KAAK;EACZ,OACEG,OAAO,CAACC,GAAG,CAACO,GAAG,KAAKL,SAAS,IAAIH,OAAO,CAACC,GAAG,CAACQ,aAAa,KAAKN,SAAS;AAE5E;AAEA,SAASL,cAAc;EACrB,OAAOE,OAAO,CAACC,GAAG,CAACS,sBAAsB,KAAKP,SAAS;AACzD","names":["isRunningOnCiServer","ci_info_1","isCI","isGithubActions","isLinuxWithoutDisplayServer","isNow","isAwsCodeBuild","exports","process","env","GITHUB_ACTIONS","undefined","os_1","type","DISPLAY","WAYLAND_DISPLAY","NOW","DEPLOYMENT_ID","CODEBUILD_BUILD_NUMBER"],"sources":["/Users/janrobel/Documents/PersonalProjekty/nftGenerateAi/clientAndContract/node_modules/hardhat/src/internal/util/ci-detection.ts"],"sourcesContent":["import ci from \"ci-info\";\nimport os from \"os\";\n\n// This has been tested in:\n//   - Travis CI\n//   - Circle CI\n//   - GitHub Actions\n//   - Azure Pipelines\n//\n// This should also work in this CI providers because they set process.env.CI:\n//   - AppVeyor\n//   - Bitbucket Pipelines\n//   - GitLab CI\n//\n// This should also work:\n//   - AWS CodeBuild -- Special case\n//   - Jenkins -- Using process.env.BUILD_NUMBER\n//   - ZEIT Now -- Special case\nexport function isRunningOnCiServer(): boolean {\n  return (\n    ci.isCI ||\n    isGithubActions() ||\n    isLinuxWithoutDisplayServer() ||\n    isNow() ||\n    isAwsCodeBuild()\n  );\n}\n\nfunction isGithubActions(): boolean {\n  return process.env.GITHUB_ACTIONS !== undefined;\n}\n\nfunction isLinuxWithoutDisplayServer(): boolean {\n  if (os.type() !== \"Linux\") {\n    return false;\n  }\n\n  if (process.env.DISPLAY !== undefined) {\n    return false;\n  }\n\n  if (process.env.WAYLAND_DISPLAY !== undefined) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction isNow() {\n  return (\n    process.env.NOW !== undefined || process.env.DEPLOYMENT_ID !== undefined\n  );\n}\n\nfunction isAwsCodeBuild() {\n  return process.env.CODEBUILD_BUILD_NUMBER !== undefined;\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}