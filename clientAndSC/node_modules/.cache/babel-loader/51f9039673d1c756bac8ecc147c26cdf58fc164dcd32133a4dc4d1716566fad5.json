{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { SentryError } from '@sentry/utils';\nimport * as http from 'http';\nimport { BaseTransport } from './base';\n/** Node http module transport */\nvar HTTPTransport = /** @class */function (_super) {\n  __extends(HTTPTransport, _super);\n  /** Create a new instance and set this.agent */\n  function HTTPTransport(options) {\n    var _this = _super.call(this, options) || this;\n    _this.options = options;\n    var proxy = options.httpProxy || process.env.http_proxy;\n    _this.module = http;\n    _this.client = proxy ? new (require('https-proxy-agent'))(proxy) : new http.Agent({\n      keepAlive: false,\n      maxSockets: 30,\n      timeout: 2000\n    });\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n  HTTPTransport.prototype.sendEvent = function (event) {\n    if (!this.module) {\n      throw new SentryError('No module available in HTTPTransport');\n    }\n    return this._sendWithModule(this.module, event);\n  };\n  return HTTPTransport;\n}(BaseTransport);\nexport { HTTPTransport };","map":{"version":3,"mappings":";AACA,SAASA,WAAW,QAAQ,eAAe;AAC3C,OAAO,KAAKC,IAAI,MAAM,MAAM;AAE5B,SAASC,aAAa,QAAQ,QAAQ;AAEtC;AACA;EAAmCC;EACjC;EACA,uBAA0BC,OAAyB;IAAnD,YACEC,kBAAMD,OAAO,CAAC;IADUE,aAAO,GAAPF,OAAO;IAE/B,IAAMG,KAAK,GAAGH,OAAO,CAACI,SAAS,IAAIC,OAAO,CAACC,GAAG,CAACC,UAAU;IACzDL,KAAI,CAACM,MAAM,GAAGX,IAAI;IAClBK,KAAI,CAACO,MAAM,GAAGN,KAAK,GACd,KAAKO,OAAO,CAAC,mBAAmB,CAAC,EAAEP,KAAK,CAAgB,GACzD,IAAIN,IAAI,CAACc,KAAK,CAAC;MAAEC,SAAS,EAAE,KAAK;MAAEC,UAAU,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAI,CAAE,CAAC;;EACzE;EAEA;;;EAGOC,iCAAS,GAAhB,UAAiBC,KAAY;IAC3B,IAAI,CAAC,IAAI,CAACR,MAAM,EAAE;MAChB,MAAM,IAAIZ,WAAW,CAAC,sCAAsC,CAAC;;IAE/D,OAAO,IAAI,CAACqB,eAAe,CAAC,IAAI,CAACT,MAAM,EAAEQ,KAAK,CAAC;EACjD,CAAC;EACH,oBAAC;AAAD,CAAC,CApBkClB,aAAa","names":["SentryError","http","BaseTransport","__extends","options","_super","_this","proxy","httpProxy","process","env","http_proxy","module","client","require","Agent","keepAlive","maxSockets","timeout","HTTPTransport","event","_sendWithModule"],"sources":["/Users/janrobel/Documents/PersonalProjekty/nftGenerateAi/clientAndContract/node_modules/@sentry/node/src/transports/http.ts"],"sourcesContent":["import { Event, Response, TransportOptions } from '@sentry/types';\nimport { SentryError } from '@sentry/utils';\nimport * as http from 'http';\n\nimport { BaseTransport } from './base';\n\n/** Node http module transport */\nexport class HTTPTransport extends BaseTransport {\n  /** Create a new instance and set this.agent */\n  public constructor(public options: TransportOptions) {\n    super(options);\n    const proxy = options.httpProxy || process.env.http_proxy;\n    this.module = http;\n    this.client = proxy\n      ? (new (require('https-proxy-agent'))(proxy) as http.Agent)\n      : new http.Agent({ keepAlive: false, maxSockets: 30, timeout: 2000 });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(event: Event): Promise<Response> {\n    if (!this.module) {\n      throw new SentryError('No module available in HTTPTransport');\n    }\n    return this._sendWithModule(this.module, event);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}