{"ast":null,"code":"'use strict';\n\nconst {\n  kProxy,\n  kClose,\n  kDestroy,\n  kInterceptors\n} = require('./core/symbols');\nconst {\n  URL\n} = require('url');\nconst Agent = require('./agent');\nconst Client = require('./client');\nconst DispatcherBase = require('./dispatcher-base');\nconst {\n  InvalidArgumentError,\n  RequestAbortedError\n} = require('./core/errors');\nconst buildConnector = require('./core/connect');\nconst kAgent = Symbol('proxy agent');\nconst kClient = Symbol('proxy client');\nconst kProxyHeaders = Symbol('proxy headers');\nconst kRequestTls = Symbol('request tls settings');\nconst kProxyTls = Symbol('proxy tls settings');\nconst kConnectEndpoint = Symbol('connect endpoint function');\nfunction defaultProtocolPort(protocol) {\n  return protocol === 'https:' ? 443 : 80;\n}\nfunction buildProxyOptions(opts) {\n  if (typeof opts === 'string') {\n    opts = {\n      uri: opts\n    };\n  }\n  if (!opts || !opts.uri) {\n    throw new InvalidArgumentError('Proxy opts.uri is mandatory');\n  }\n  return {\n    uri: opts.uri,\n    protocol: opts.protocol || 'https'\n  };\n}\nclass ProxyAgent extends DispatcherBase {\n  constructor(opts) {\n    super(opts);\n    this[kProxy] = buildProxyOptions(opts);\n    this[kAgent] = new Agent(opts);\n    this[kInterceptors] = opts.interceptors && opts.interceptors.ProxyAgent && Array.isArray(opts.interceptors.ProxyAgent) ? opts.interceptors.ProxyAgent : [];\n    if (typeof opts === 'string') {\n      opts = {\n        uri: opts\n      };\n    }\n    if (!opts || !opts.uri) {\n      throw new InvalidArgumentError('Proxy opts.uri is mandatory');\n    }\n    this[kRequestTls] = opts.requestTls;\n    this[kProxyTls] = opts.proxyTls;\n    this[kProxyHeaders] = opts.headers || {};\n    if (opts.auth && opts.token) {\n      throw new InvalidArgumentError('opts.auth cannot be used in combination with opts.token');\n    } else if (opts.auth) {\n      /* @deprecated in favour of opts.token */\n      this[kProxyHeaders]['proxy-authorization'] = `Basic ${opts.auth}`;\n    } else if (opts.token) {\n      this[kProxyHeaders]['proxy-authorization'] = opts.token;\n    }\n    const resolvedUrl = new URL(opts.uri);\n    const {\n      origin,\n      port,\n      host\n    } = resolvedUrl;\n    const connect = buildConnector({\n      ...opts.proxyTls\n    });\n    this[kConnectEndpoint] = buildConnector({\n      ...opts.requestTls\n    });\n    this[kClient] = new Client(resolvedUrl, {\n      connect\n    });\n    this[kAgent] = new Agent({\n      ...opts,\n      connect: async (opts, callback) => {\n        let requestedHost = opts.host;\n        if (!opts.port) {\n          requestedHost += `:${defaultProtocolPort(opts.protocol)}`;\n        }\n        try {\n          const {\n            socket,\n            statusCode\n          } = await this[kClient].connect({\n            origin,\n            port,\n            path: requestedHost,\n            signal: opts.signal,\n            headers: {\n              ...this[kProxyHeaders],\n              host\n            }\n          });\n          if (statusCode !== 200) {\n            socket.on('error', () => {}).destroy();\n            callback(new RequestAbortedError('Proxy response !== 200 when HTTP Tunneling'));\n          }\n          if (opts.protocol !== 'https:') {\n            callback(null, socket);\n            return;\n          }\n          let servername;\n          if (this[kRequestTls]) {\n            servername = this[kRequestTls].servername;\n          } else {\n            servername = opts.servername;\n          }\n          this[kConnectEndpoint]({\n            ...opts,\n            servername,\n            httpSocket: socket\n          }, callback);\n        } catch (err) {\n          callback(err);\n        }\n      }\n    });\n  }\n  dispatch(opts, handler) {\n    const {\n      host\n    } = new URL(opts.origin);\n    const headers = buildHeaders(opts.headers);\n    throwIfProxyAuthIsSent(headers);\n    return this[kAgent].dispatch({\n      ...opts,\n      headers: {\n        ...headers,\n        host\n      }\n    }, handler);\n  }\n  async [kClose]() {\n    await this[kAgent].close();\n    await this[kClient].close();\n  }\n  async [kDestroy]() {\n    await this[kAgent].destroy();\n    await this[kClient].destroy();\n  }\n}\n\n/**\n * @param {string[] | Record<string, string>} headers\n * @returns {Record<string, string>}\n */\nfunction buildHeaders(headers) {\n  // When using undici.fetch, the headers list is stored\n  // as an array.\n  if (Array.isArray(headers)) {\n    /** @type {Record<string, string>} */\n    const headersPair = {};\n    for (let i = 0; i < headers.length; i += 2) {\n      headersPair[headers[i]] = headers[i + 1];\n    }\n    return headersPair;\n  }\n  return headers;\n}\n\n/**\n * @param {Record<string, string>} headers\n *\n * Previous versions of ProxyAgent suggests the Proxy-Authorization in request headers\n * Nevertheless, it was changed and to avoid a security vulnerability by end users\n * this check was created.\n * It should be removed in the next major version for performance reasons\n */\nfunction throwIfProxyAuthIsSent(headers) {\n  const existProxyAuth = headers && Object.keys(headers).find(key => key.toLowerCase() === 'proxy-authorization');\n  if (existProxyAuth) {\n    throw new InvalidArgumentError('Proxy-Authorization should be sent in ProxyAgent constructor');\n  }\n}\nmodule.exports = ProxyAgent;","map":{"version":3,"names":["kProxy","kClose","kDestroy","kInterceptors","require","URL","Agent","Client","DispatcherBase","InvalidArgumentError","RequestAbortedError","buildConnector","kAgent","Symbol","kClient","kProxyHeaders","kRequestTls","kProxyTls","kConnectEndpoint","defaultProtocolPort","protocol","buildProxyOptions","opts","uri","ProxyAgent","constructor","interceptors","Array","isArray","requestTls","proxyTls","headers","auth","token","resolvedUrl","origin","port","host","connect","callback","requestedHost","socket","statusCode","path","signal","on","destroy","servername","httpSocket","err","dispatch","handler","buildHeaders","throwIfProxyAuthIsSent","close","headersPair","i","length","existProxyAuth","Object","keys","find","key","toLowerCase","module","exports"],"sources":["/Users/janrobel/Documents/PersonalProjekty/nftGenerateAi/clientAndContract/node_modules/undici/lib/proxy-agent.js"],"sourcesContent":["'use strict'\n\nconst { kProxy, kClose, kDestroy, kInterceptors } = require('./core/symbols')\nconst { URL } = require('url')\nconst Agent = require('./agent')\nconst Client = require('./client')\nconst DispatcherBase = require('./dispatcher-base')\nconst { InvalidArgumentError, RequestAbortedError } = require('./core/errors')\nconst buildConnector = require('./core/connect')\n\nconst kAgent = Symbol('proxy agent')\nconst kClient = Symbol('proxy client')\nconst kProxyHeaders = Symbol('proxy headers')\nconst kRequestTls = Symbol('request tls settings')\nconst kProxyTls = Symbol('proxy tls settings')\nconst kConnectEndpoint = Symbol('connect endpoint function')\n\nfunction defaultProtocolPort (protocol) {\n  return protocol === 'https:' ? 443 : 80\n}\n\nfunction buildProxyOptions (opts) {\n  if (typeof opts === 'string') {\n    opts = { uri: opts }\n  }\n\n  if (!opts || !opts.uri) {\n    throw new InvalidArgumentError('Proxy opts.uri is mandatory')\n  }\n\n  return {\n    uri: opts.uri,\n    protocol: opts.protocol || 'https'\n  }\n}\n\nclass ProxyAgent extends DispatcherBase {\n  constructor (opts) {\n    super(opts)\n    this[kProxy] = buildProxyOptions(opts)\n    this[kAgent] = new Agent(opts)\n    this[kInterceptors] = opts.interceptors && opts.interceptors.ProxyAgent && Array.isArray(opts.interceptors.ProxyAgent)\n      ? opts.interceptors.ProxyAgent\n      : []\n\n    if (typeof opts === 'string') {\n      opts = { uri: opts }\n    }\n\n    if (!opts || !opts.uri) {\n      throw new InvalidArgumentError('Proxy opts.uri is mandatory')\n    }\n\n    this[kRequestTls] = opts.requestTls\n    this[kProxyTls] = opts.proxyTls\n    this[kProxyHeaders] = opts.headers || {}\n\n    if (opts.auth && opts.token) {\n      throw new InvalidArgumentError('opts.auth cannot be used in combination with opts.token')\n    } else if (opts.auth) {\n      /* @deprecated in favour of opts.token */\n      this[kProxyHeaders]['proxy-authorization'] = `Basic ${opts.auth}`\n    } else if (opts.token) {\n      this[kProxyHeaders]['proxy-authorization'] = opts.token\n    }\n\n    const resolvedUrl = new URL(opts.uri)\n    const { origin, port, host } = resolvedUrl\n\n    const connect = buildConnector({ ...opts.proxyTls })\n    this[kConnectEndpoint] = buildConnector({ ...opts.requestTls })\n    this[kClient] = new Client(resolvedUrl, { connect })\n    this[kAgent] = new Agent({\n      ...opts,\n      connect: async (opts, callback) => {\n        let requestedHost = opts.host\n        if (!opts.port) {\n          requestedHost += `:${defaultProtocolPort(opts.protocol)}`\n        }\n        try {\n          const { socket, statusCode } = await this[kClient].connect({\n            origin,\n            port,\n            path: requestedHost,\n            signal: opts.signal,\n            headers: {\n              ...this[kProxyHeaders],\n              host\n            }\n          })\n          if (statusCode !== 200) {\n            socket.on('error', () => {}).destroy()\n            callback(new RequestAbortedError('Proxy response !== 200 when HTTP Tunneling'))\n          }\n          if (opts.protocol !== 'https:') {\n            callback(null, socket)\n            return\n          }\n          let servername\n          if (this[kRequestTls]) {\n            servername = this[kRequestTls].servername\n          } else {\n            servername = opts.servername\n          }\n          this[kConnectEndpoint]({ ...opts, servername, httpSocket: socket }, callback)\n        } catch (err) {\n          callback(err)\n        }\n      }\n    })\n  }\n\n  dispatch (opts, handler) {\n    const { host } = new URL(opts.origin)\n    const headers = buildHeaders(opts.headers)\n    throwIfProxyAuthIsSent(headers)\n    return this[kAgent].dispatch(\n      {\n        ...opts,\n        headers: {\n          ...headers,\n          host\n        }\n      },\n      handler\n    )\n  }\n\n  async [kClose] () {\n    await this[kAgent].close()\n    await this[kClient].close()\n  }\n\n  async [kDestroy] () {\n    await this[kAgent].destroy()\n    await this[kClient].destroy()\n  }\n}\n\n/**\n * @param {string[] | Record<string, string>} headers\n * @returns {Record<string, string>}\n */\nfunction buildHeaders (headers) {\n  // When using undici.fetch, the headers list is stored\n  // as an array.\n  if (Array.isArray(headers)) {\n    /** @type {Record<string, string>} */\n    const headersPair = {}\n\n    for (let i = 0; i < headers.length; i += 2) {\n      headersPair[headers[i]] = headers[i + 1]\n    }\n\n    return headersPair\n  }\n\n  return headers\n}\n\n/**\n * @param {Record<string, string>} headers\n *\n * Previous versions of ProxyAgent suggests the Proxy-Authorization in request headers\n * Nevertheless, it was changed and to avoid a security vulnerability by end users\n * this check was created.\n * It should be removed in the next major version for performance reasons\n */\nfunction throwIfProxyAuthIsSent (headers) {\n  const existProxyAuth = headers && Object.keys(headers)\n    .find((key) => key.toLowerCase() === 'proxy-authorization')\n  if (existProxyAuth) {\n    throw new InvalidArgumentError('Proxy-Authorization should be sent in ProxyAgent constructor')\n  }\n}\n\nmodule.exports = ProxyAgent\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}