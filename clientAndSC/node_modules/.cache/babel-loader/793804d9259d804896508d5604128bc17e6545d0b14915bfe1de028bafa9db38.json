{"ast":null,"code":"var _jsxFileName = \"/Users/janrobel/Documents/PersonalProjekty/nftGenerateAi/clientAndContract/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractModel = require('./contractModel.js');\n\n//!add my nfts site!\n//!make it look acceptable!\n\nfunction App() {\n  _s();\n  const [generated, setGenerated] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [nftParameters, setNftParameters] = useState(\"\");\n  const [imageLink, setImageLink] = useState(\"\");\n  let loadingText = \"Your Nft is being Generated...\";\n  useEffect(() => {\n    console.log(\"useEffect\");\n  }, [imageLink, generated, message]);\n  const generateNft = async () => {\n    console.log(\"working\");\n    const link = await axios.get(`http://localhost:3001/?aiParams=${nftParameters}`);\n    console.log(\"done\");\n    return link.data;\n  };\n  const handleChange = e => {\n    console.log(e.target.value);\n    setNftParameters(e.target.value);\n  };\n  const handleSubmit = () => {\n    if (nftParameters == \"\") {\n      setMessage(\"*At least 1 word*\");\n    } else {\n      setMessage(\"*Generatig in progress...*\");\n      generateNft().then(data => {\n        loadingText = \"Your ai generatedNft is ready\";\n        console.log(\"xd\");\n        setImageLink(data);\n      });\n      setGenerated(true);\n      //setMessage(\"*failed to generate*\");\n    }\n  };\n\n  const handleMint = () => {\n    //contract model mint()\n  };\n  if (!generated) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mainText\",\n        children: \"Mint your ideas!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"subText\",\n        children: \"Ai generated Nfts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"generateBar\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          className: \"textInput\",\n          placeholder: \"Eg. Bored monkey wearing a rolex\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          className: \"generateButton\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"../UI/button4.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 79\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"generatedText\",\n        children: loadingText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"imageNft\",\n        src: imageLink\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mintButton\",\n        onClick: handleMint(),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageLink ? \"../UI/Button3.png\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 71\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n}\n_s(App, \"MqpDPsKQm+Rtf2hxGxgfguoIJPo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","axios","contractModel","require","App","generated","setGenerated","message","setMessage","nftParameters","setNftParameters","imageLink","setImageLink","loadingText","console","log","generateNft","link","get","data","handleChange","e","target","value","handleSubmit","then","handleMint"],"sources":["/Users/janrobel/Documents/PersonalProjekty/nftGenerateAi/clientAndContract/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport \"./index.css\";\nconst contractModel = require('./contractModel.js');\n\n//!add my nfts site!\n//!make it look acceptable!\n\nfunction App(){\n\n    const [generated, setGenerated] = useState(false);\n    const [message, setMessage] = useState(\"\");\n    const [nftParameters, setNftParameters] = useState(\"\");\n    const [imageLink, setImageLink] = useState(\"\");\n    \n    let loadingText = \"Your Nft is being Generated...\"\n\n    useEffect(() => {console.log(\"useEffect\")}, [imageLink,generated, message]);\n\n    const generateNft = async () => {\n        console.log(\"working\");\n        const link = await axios.get(`http://localhost:3001/?aiParams=${nftParameters}`);\n        console.log(\"done\");\n        return(link.data);\n    }\n\n    const handleChange = (e) =>{\n        console.log(e.target.value);\n        setNftParameters(e.target.value);\n    }\n    \n\n    const handleSubmit = () => {\n        if(nftParameters == \"\"){\n            setMessage(\"*At least 1 word*\");\n        }\n        else{\n            setMessage(\"*Generatig in progress...*\")\n            generateNft().then((data) => {\n                loadingText = \"Your ai generatedNft is ready\";\n                console.log(\"xd\");\n                setImageLink(data); \n            });\n            setGenerated(true);\n            //setMessage(\"*failed to generate*\");\n        }\n    }\n\n    const handleMint = () => {\n        //contract model mint()\n    }\n    if(!generated){\n        return (\n            <div>\n                <p className=\"mainText\">\n                    Mint your ideas!\n                </p> \n                <p className=\"subText\">\n                    Ai generated Nfts\n                </p>\n                <div className=\"generateBar\">\n                    <input onChange={handleChange} className=\"textInput\" placeholder=\"Eg. Bored monkey wearing a rolex\"></input>\n                    <button onClick={handleSubmit} className=\"generateButton\"><img src=\"../UI/button4.png\"/></button>\n                </div>\n            </div>\n            );\n    }\n    else{\n        return(\n            <div>\n                <p className=\"generatedText\">{loadingText}</p>\n                <img className=\"imageNft\" src={imageLink}/>\n                <button className=\"mintButton\" onClick={handleMint()}><img src={imageLink?\"../UI/Button3.png\":\"\"}/></button>\n            </div>\n        );\n        \n    }\n    \n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}