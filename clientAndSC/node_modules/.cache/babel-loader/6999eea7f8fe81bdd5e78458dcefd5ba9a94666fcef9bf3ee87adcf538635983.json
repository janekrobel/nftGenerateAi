{"ast":null,"code":"const fs = require('fs');\nconst {\n  versionGteLt\n} = require('../dist/util');\n\n// In node's core, this is implemented in C\n// https://github.com/nodejs/node/blob/v15.3.0/src/node_file.cc#L891-L985\n/**\n * @param {string} path\n * @returns {[] | [string, boolean]}\n */\nfunction internalModuleReadJSON(path) {\n  let string;\n  try {\n    string = fs.readFileSync(path, 'utf8');\n  } catch (e) {\n    if (e.code === 'ENOENT') return [];\n    throw e;\n  }\n  // Node's implementation checks for the presence of relevant keys: main, name, type, exports, imports\n  // Node does this for performance to skip unnecessary parsing.\n  // This would slow us down and, based on our usage, we can skip it.\n  const containsKeys = true;\n  return [string, containsKeys];\n}\n\n// In node's core, this is implemented in C\n// https://github.com/nodejs/node/blob/63e7dc1e5c71b70c80ed9eda230991edb00811e2/src/node_file.cc#L987-L1005\n/**\n * @param {string} path\n * @returns {number} 0 = file, 1 = dir, negative = error\n */\nfunction internalModuleStat(path) {\n  const stat = fs.statSync(path, {\n    throwIfNoEntry: false\n  });\n  if (!stat) return -1;\n  if (stat.isFile()) return 0;\n  if (stat.isDirectory()) return 1;\n}\n\n/**\n * @param {string} path\n * @returns {number} 0 = file, 1 = dir, negative = error\n */\nfunction internalModuleStatInefficient(path) {\n  try {\n    const stat = fs.statSync(path);\n    if (stat.isFile()) return 0;\n    if (stat.isDirectory()) return 1;\n  } catch (e) {\n    return -e.errno || -1;\n  }\n}\nconst statSupportsThrowIfNoEntry = versionGteLt(process.versions.node, '15.3.0') || versionGteLt(process.versions.node, '14.17.0', '15.0.0');\nmodule.exports = {\n  internalModuleReadJSON,\n  internalModuleStat: statSupportsThrowIfNoEntry ? internalModuleStat : internalModuleStatInefficient\n};","map":{"version":3,"names":["fs","require","versionGteLt","internalModuleReadJSON","path","string","readFileSync","e","code","containsKeys","internalModuleStat","stat","statSync","throwIfNoEntry","isFile","isDirectory","internalModuleStatInefficient","errno","statSupportsThrowIfNoEntry","process","versions","node","module","exports"],"sources":["/Users/janrobel/Documents/PersonalProjekty/nftGenerateAi/clientAndContract/node_modules/ts-node/dist-raw/node-internalBinding-fs.js"],"sourcesContent":["const fs = require('fs');\nconst {versionGteLt} = require('../dist/util');\n\n// In node's core, this is implemented in C\n// https://github.com/nodejs/node/blob/v15.3.0/src/node_file.cc#L891-L985\n/**\n * @param {string} path\n * @returns {[] | [string, boolean]}\n */\nfunction internalModuleReadJSON(path) {\n  let string\n  try {\n    string = fs.readFileSync(path, 'utf8')\n  } catch (e) {\n    if (e.code === 'ENOENT') return []\n    throw e\n  }\n  // Node's implementation checks for the presence of relevant keys: main, name, type, exports, imports\n  // Node does this for performance to skip unnecessary parsing.\n  // This would slow us down and, based on our usage, we can skip it.\n  const containsKeys = true\n  return [string, containsKeys]\n}\n\n// In node's core, this is implemented in C\n// https://github.com/nodejs/node/blob/63e7dc1e5c71b70c80ed9eda230991edb00811e2/src/node_file.cc#L987-L1005\n/**\n * @param {string} path\n * @returns {number} 0 = file, 1 = dir, negative = error\n */\nfunction internalModuleStat(path) {\n  const stat = fs.statSync(path, { throwIfNoEntry: false });\n  if(!stat) return -1;\n  if(stat.isFile()) return 0;\n  if(stat.isDirectory()) return 1;\n}\n\n/**\n * @param {string} path\n * @returns {number} 0 = file, 1 = dir, negative = error\n */\nfunction internalModuleStatInefficient(path) {\n  try {\n    const stat = fs.statSync(path);\n    if(stat.isFile()) return 0;\n    if(stat.isDirectory()) return 1;\n  } catch(e) {\n    return -e.errno || -1;\n  }\n}\n\nconst statSupportsThrowIfNoEntry = versionGteLt(process.versions.node, '15.3.0') ||\n  versionGteLt(process.versions.node, '14.17.0', '15.0.0');\n\nmodule.exports = {\n  internalModuleReadJSON,\n  internalModuleStat: statSupportsThrowIfNoEntry ? internalModuleStat : internalModuleStatInefficient\n};\n"],"mappings":"AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;AACxB,MAAM;EAACC;AAAY,CAAC,GAAGD,OAAO,CAAC,cAAc,CAAC;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,sBAAsB,CAACC,IAAI,EAAE;EACpC,IAAIC,MAAM;EACV,IAAI;IACFA,MAAM,GAAGL,EAAE,CAACM,YAAY,CAACF,IAAI,EAAE,MAAM,CAAC;EACxC,CAAC,CAAC,OAAOG,CAAC,EAAE;IACV,IAAIA,CAAC,CAACC,IAAI,KAAK,QAAQ,EAAE,OAAO,EAAE;IAClC,MAAMD,CAAC;EACT;EACA;EACA;EACA;EACA,MAAME,YAAY,GAAG,IAAI;EACzB,OAAO,CAACJ,MAAM,EAAEI,YAAY,CAAC;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,kBAAkB,CAACN,IAAI,EAAE;EAChC,MAAMO,IAAI,GAAGX,EAAE,CAACY,QAAQ,CAACR,IAAI,EAAE;IAAES,cAAc,EAAE;EAAM,CAAC,CAAC;EACzD,IAAG,CAACF,IAAI,EAAE,OAAO,CAAC,CAAC;EACnB,IAAGA,IAAI,CAACG,MAAM,EAAE,EAAE,OAAO,CAAC;EAC1B,IAAGH,IAAI,CAACI,WAAW,EAAE,EAAE,OAAO,CAAC;AACjC;;AAEA;AACA;AACA;AACA;AACA,SAASC,6BAA6B,CAACZ,IAAI,EAAE;EAC3C,IAAI;IACF,MAAMO,IAAI,GAAGX,EAAE,CAACY,QAAQ,CAACR,IAAI,CAAC;IAC9B,IAAGO,IAAI,CAACG,MAAM,EAAE,EAAE,OAAO,CAAC;IAC1B,IAAGH,IAAI,CAACI,WAAW,EAAE,EAAE,OAAO,CAAC;EACjC,CAAC,CAAC,OAAMR,CAAC,EAAE;IACT,OAAO,CAACA,CAAC,CAACU,KAAK,IAAI,CAAC,CAAC;EACvB;AACF;AAEA,MAAMC,0BAA0B,GAAGhB,YAAY,CAACiB,OAAO,CAACC,QAAQ,CAACC,IAAI,EAAE,QAAQ,CAAC,IAC9EnB,YAAY,CAACiB,OAAO,CAACC,QAAQ,CAACC,IAAI,EAAE,SAAS,EAAE,QAAQ,CAAC;AAE1DC,MAAM,CAACC,OAAO,GAAG;EACfpB,sBAAsB;EACtBO,kBAAkB,EAAEQ,0BAA0B,GAAGR,kBAAkB,GAAGM;AACxE,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}