{"ast":null,"code":"var _jsxFileName = \"/Users/janrobel/Documents/PersonalProjekty/nftGenerateAi/clientAndContract/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { Box, TextField, Button } from '@mui/material';\nimport { Container, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nrequire(\"./contractModel.js\");\n\n//add my nfts site \n//make it look acceptable \n\nfunction App() {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [nftParameters, setNftParameters] = useState(\"\");\n  let geneated = false;\n  const handleChange = value => {\n    setNftParameters(value);\n  };\n  const handleSubmit = () => {\n    if (nftParameters == \"\") {\n      setMessage(\"*At least 1 word*\");\n    } else {\n      setMessage(\"*Generatig in progress...*\");\n      geneated = true;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h1\",\n      children: \"Generate Your Nft\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      helperText: message,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleSubmit,\n      children: \"Generate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this)\n  //write logic for if the image is generated - add mint button and onclick to connect to contract Model\n  ;\n}\n_s(App, \"uvreZ5ruS8Q4vCIeVn7vRhIdS48=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Box","TextField","Button","Container","Typography","require","App","message","setMessage","nftParameters","setNftParameters","geneated","handleChange","value","handleSubmit"],"sources":["/Users/janrobel/Documents/PersonalProjekty/nftGenerateAi/clientAndContract/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Box, TextField, Button } from '@mui/material';\nimport { Container, Typography } from \"@mui/material\";\n\n  \n\nrequire(\"./contractModel.js\");\n\n//add my nfts site \n//make it look acceptable \n\nfunction App(){\n    const [message, setMessage] = useState(\"\");\n    const [nftParameters, setNftParameters] = useState(\"\");\n    let geneated = false;\n    const handleChange = (value) =>{\n        setNftParameters(value);\n    }\n\n    const handleSubmit = () => {\n        if(nftParameters == \"\"){\n            setMessage(\"*At least 1 word*\");\n        }\n        else{\n            setMessage(\"*Generatig in progress...*\")\n            geneated = true;\n        }\n    }\n\n    return (\n    <Container>\n        <Typography variant=\"h1\">\n            Generate Your Nft\n        </Typography> \n        <TextField helperText={message} onChange={handleChange}></TextField>\n        <Button onClick={handleSubmit}>Generate</Button>\n    </Container>\n    //write logic for if the image is generated - add mint button and onclick to connect to contract Model\n\n    );\n}\n\nexport default App;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,GAAG,EAAEC,SAAS,EAAEC,MAAM,QAAQ,eAAe;AACtD,SAASC,SAAS,EAAEC,UAAU,QAAQ,eAAe;AAAC;AAItDC,OAAO,CAAC,oBAAoB,CAAC;;AAE7B;AACA;;AAEA,SAASC,GAAG,GAAE;EAAA;EACV,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtD,IAAIa,QAAQ,GAAG,KAAK;EACpB,MAAMC,YAAY,GAAIC,KAAK,IAAI;IAC3BH,gBAAgB,CAACG,KAAK,CAAC;EAC3B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAM;IACvB,IAAGL,aAAa,IAAI,EAAE,EAAC;MACnBD,UAAU,CAAC,mBAAmB,CAAC;IACnC,CAAC,MACG;MACAA,UAAU,CAAC,4BAA4B,CAAC;MACxCG,QAAQ,GAAG,IAAI;IACnB;EACJ,CAAC;EAED,oBACA,QAAC,SAAS;IAAA,wBACN,QAAC,UAAU;MAAC,OAAO,EAAC,IAAI;MAAA,UAAC;IAEzB;MAAA;MAAA;MAAA;IAAA,QAAa,eACb,QAAC,SAAS;MAAC,UAAU,EAAEJ,OAAQ;MAAC,QAAQ,EAAEK;IAAa;MAAA;MAAA;MAAA;IAAA,QAAa,eACpE,QAAC,MAAM;MAAC,OAAO,EAAEE,YAAa;MAAA,UAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA;EAEpD;EAAA;AAGJ;AAAC,GA7BQR,GAAG;AAAA,KAAHA,GAAG;AA+BZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}