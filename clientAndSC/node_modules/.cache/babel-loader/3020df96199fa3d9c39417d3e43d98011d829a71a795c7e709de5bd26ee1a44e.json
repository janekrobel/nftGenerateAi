{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TasksDSL = void 0;\nconst task_definitions_1 = require(\"./task-definitions\");\n/**\n * This class defines the DSL used in Hardhat config files\n * for creating and overriding tasks.\n */\nclass TasksDSL {\n  constructor() {\n    this.internalTask = this.subtask;\n    this._tasks = {};\n  }\n  task(name, descriptionOrAction, action) {\n    return this._addTask(name, descriptionOrAction, action, false);\n  }\n  subtask(name, descriptionOrAction, action) {\n    return this._addTask(name, descriptionOrAction, action, true);\n  }\n  /**\n   * Retrieves the task definitions.\n   *\n   * @returns The tasks container.\n   */\n  getTaskDefinitions() {\n    return this._tasks;\n  }\n  _addTask(name, descriptionOrAction, action, isSubtask) {\n    const parentTaskDefinition = this._tasks[name];\n    let taskDefinition;\n    if (parentTaskDefinition !== undefined) {\n      taskDefinition = new task_definitions_1.OverriddenTaskDefinition(parentTaskDefinition, isSubtask);\n    } else {\n      taskDefinition = new task_definitions_1.SimpleTaskDefinition(name, isSubtask);\n    }\n    if (descriptionOrAction instanceof Function) {\n      action = descriptionOrAction;\n      descriptionOrAction = undefined;\n    }\n    if (descriptionOrAction !== undefined) {\n      taskDefinition.setDescription(descriptionOrAction);\n    }\n    if (action !== undefined) {\n      taskDefinition.setAction(action);\n    }\n    this._tasks[name] = taskDefinition;\n    return taskDefinition;\n  }\n}\nexports.TasksDSL = TasksDSL;","map":{"version":3,"mappings":";;;;;;AAOA;AAKA;;;;AAIA,MAAaA,QAAQ;EAArBC;IACkB,iBAAY,GAAG,IAAI,CAACC,OAAO;IAE1B,WAAM,GAAa,EAAE;EA8HxC;EA5FSC,IAAI,CACTC,IAAY,EACZC,mBAAgD,EAChDC,MAA0B;IAE1B,OAAO,IAAI,CAACC,QAAQ,CAACH,IAAI,EAAEC,mBAAmB,EAAEC,MAAM,EAAE,KAAK,CAAC;EAChE;EAkCOJ,OAAO,CACZE,IAAY,EACZC,mBAAgD,EAChDC,MAA0B;IAE1B,OAAO,IAAI,CAACC,QAAQ,CAACH,IAAI,EAAEC,mBAAmB,EAAEC,MAAM,EAAE,IAAI,CAAC;EAC/D;EAEA;;;;;EAKOE,kBAAkB;IACvB,OAAO,IAAI,CAACC,MAAM;EACpB;EAEQF,QAAQ,CACdH,IAAY,EACZC,mBAA+C,EAC/CC,MAAyB,EACzBI,SAAmB;IAEnB,MAAMC,oBAAoB,GAAG,IAAI,CAACF,MAAM,CAACL,IAAI,CAAC;IAE9C,IAAIQ,cAA8B;IAElC,IAAID,oBAAoB,KAAKE,SAAS,EAAE;MACtCD,cAAc,GAAG,IAAIE,2CAAwB,CAC3CH,oBAAoB,EACpBD,SAAS,CACV;KACF,MAAM;MACLE,cAAc,GAAG,IAAIE,uCAAoB,CAACV,IAAI,EAAEM,SAAS,CAAC;;IAG5D,IAAIL,mBAAmB,YAAYU,QAAQ,EAAE;MAC3CT,MAAM,GAAGD,mBAAmB;MAC5BA,mBAAmB,GAAGQ,SAAS;;IAGjC,IAAIR,mBAAmB,KAAKQ,SAAS,EAAE;MACrCD,cAAc,CAACI,cAAc,CAACX,mBAAmB,CAAC;;IAGpD,IAAIC,MAAM,KAAKO,SAAS,EAAE;MACxBD,cAAc,CAACK,SAAS,CAACX,MAAM,CAAC;;IAGlC,IAAI,CAACG,MAAM,CAACL,IAAI,CAAC,GAAGQ,cAAc;IAClC,OAAOA,cAAc;EACvB;;AAhIFM","names":["TasksDSL","constructor","subtask","task","name","descriptionOrAction","action","_addTask","getTaskDefinitions","_tasks","isSubtask","parentTaskDefinition","taskDefinition","undefined","task_definitions_1","Function","setDescription","setAction","exports"],"sources":["/Users/janrobel/Documents/PersonalProjekty/nftGenerateAi/clientAndContract/node_modules/hardhat/src/internal/core/tasks/dsl.ts"],"sourcesContent":["import {\n  ActionType,\n  TaskArguments,\n  TaskDefinition,\n  TasksMap,\n} from \"../../../types\";\n\nimport {\n  OverriddenTaskDefinition,\n  SimpleTaskDefinition,\n} from \"./task-definitions\";\n\n/**\n * This class defines the DSL used in Hardhat config files\n * for creating and overriding tasks.\n */\nexport class TasksDSL {\n  public readonly internalTask = this.subtask;\n\n  private readonly _tasks: TasksMap = {};\n\n  /**\n   * Creates a task, overriding any previous task with the same name.\n   *\n   * @remarks The action must await every async call made within it.\n   *\n   * @param name The task's name.\n   * @param description The task's description.\n   * @param action The task's action.\n   * @returns A task definition.\n   */\n  public task<ArgsT extends TaskArguments>(\n    name: string,\n    description?: string,\n    action?: ActionType<ArgsT>\n  ): TaskDefinition;\n\n  /**\n   * Creates a task without description, overriding any previous task\n   * with the same name.\n   *\n   * @remarks The action must await every async call made within it.\n   *\n   * @param name The task's name.\n   * @param action The task's action.\n   *\n   * @returns A task definition.\n   */\n  public task<ArgsT extends TaskArguments>(\n    name: string,\n    action: ActionType<ArgsT>\n  ): TaskDefinition;\n\n  public task<ArgsT extends TaskArguments>(\n    name: string,\n    descriptionOrAction?: string | ActionType<ArgsT>,\n    action?: ActionType<ArgsT>\n  ): TaskDefinition {\n    return this._addTask(name, descriptionOrAction, action, false);\n  }\n\n  /**\n   * Creates a subtask, overriding any previous task with the same name.\n   *\n   * @remarks The subtasks won't be displayed in the CLI help messages.\n   * @remarks The action must await every async call made within it.\n   *\n   * @param name The task's name.\n   * @param description The task's description.\n   * @param action The task's action.\n   * @returns A task definition.\n   */\n  public subtask<ArgsT extends TaskArguments>(\n    name: string,\n    description?: string,\n    action?: ActionType<ArgsT>\n  ): TaskDefinition;\n\n  /**\n   * Creates a subtask without description, overriding any previous\n   * task with the same name.\n   *\n   * @remarks The subtasks won't be displayed in the CLI help messages.\n   * @remarks The action must await every async call made within it.\n   *\n   * @param name The task's name.\n   * @param action The task's action.\n   * @returns A task definition.\n   */\n  public subtask<ArgsT extends TaskArguments>(\n    name: string,\n    action: ActionType<ArgsT>\n  ): TaskDefinition;\n  public subtask<ArgsT extends TaskArguments>(\n    name: string,\n    descriptionOrAction?: string | ActionType<ArgsT>,\n    action?: ActionType<ArgsT>\n  ): TaskDefinition {\n    return this._addTask(name, descriptionOrAction, action, true);\n  }\n\n  /**\n   * Retrieves the task definitions.\n   *\n   * @returns The tasks container.\n   */\n  public getTaskDefinitions(): TasksMap {\n    return this._tasks;\n  }\n\n  private _addTask<ArgT extends TaskArguments>(\n    name: string,\n    descriptionOrAction?: string | ActionType<ArgT>,\n    action?: ActionType<ArgT>,\n    isSubtask?: boolean\n  ) {\n    const parentTaskDefinition = this._tasks[name];\n\n    let taskDefinition: TaskDefinition;\n\n    if (parentTaskDefinition !== undefined) {\n      taskDefinition = new OverriddenTaskDefinition(\n        parentTaskDefinition,\n        isSubtask\n      );\n    } else {\n      taskDefinition = new SimpleTaskDefinition(name, isSubtask);\n    }\n\n    if (descriptionOrAction instanceof Function) {\n      action = descriptionOrAction;\n      descriptionOrAction = undefined;\n    }\n\n    if (descriptionOrAction !== undefined) {\n      taskDefinition.setDescription(descriptionOrAction);\n    }\n\n    if (action !== undefined) {\n      taskDefinition.setAction(action);\n    }\n\n    this._tasks[name] = taskDefinition;\n    return taskDefinition;\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}