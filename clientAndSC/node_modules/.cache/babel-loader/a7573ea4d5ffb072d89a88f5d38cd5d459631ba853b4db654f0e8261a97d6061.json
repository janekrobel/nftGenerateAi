{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HARDHAT_PARAM_DEFINITIONS = void 0;\nconst types = __importStar(require(\"./argumentTypes\"));\nexports.HARDHAT_PARAM_DEFINITIONS = {\n  network: {\n    name: \"network\",\n    defaultValue: undefined,\n    description: \"The network to connect to.\",\n    type: types.string,\n    isOptional: true,\n    isFlag: false,\n    isVariadic: false\n  },\n  showStackTraces: {\n    name: \"showStackTraces\",\n    defaultValue: false,\n    description: \"Show stack traces (always enabled on CI servers).\",\n    type: types.boolean,\n    isFlag: true,\n    isOptional: true,\n    isVariadic: false\n  },\n  version: {\n    name: \"version\",\n    defaultValue: false,\n    description: \"Shows hardhat's version.\",\n    type: types.boolean,\n    isFlag: true,\n    isOptional: true,\n    isVariadic: false\n  },\n  help: {\n    name: \"help\",\n    defaultValue: false,\n    description: \"Shows this message, or a task's help if its name is provided\",\n    type: types.boolean,\n    isFlag: true,\n    isOptional: true,\n    isVariadic: false\n  },\n  emoji: {\n    name: \"emoji\",\n    defaultValue: process.platform === \"darwin\",\n    description: \"Use emoji in messages.\",\n    type: types.boolean,\n    isFlag: true,\n    isOptional: true,\n    isVariadic: false\n  },\n  config: {\n    name: \"config\",\n    defaultValue: undefined,\n    description: \"A Hardhat config file.\",\n    type: types.inputFile,\n    isFlag: false,\n    isOptional: true,\n    isVariadic: false\n  },\n  verbose: {\n    name: \"verbose\",\n    defaultValue: false,\n    description: \"Enables Hardhat verbose logging\",\n    type: types.boolean,\n    isFlag: true,\n    isOptional: true,\n    isVariadic: false\n  },\n  maxMemory: {\n    name: \"maxMemory\",\n    defaultValue: undefined,\n    description: \"The maximum amount of memory that Hardhat can use.\",\n    type: types.int,\n    isOptional: true,\n    isFlag: false,\n    isVariadic: false\n  },\n  tsconfig: {\n    name: \"tsconfig\",\n    defaultValue: undefined,\n    description: \"A TypeScript config file.\",\n    type: types.inputFile,\n    isOptional: true,\n    isFlag: false,\n    isVariadic: false\n  },\n  flamegraph: {\n    name: \"flamegraph\",\n    defaultValue: undefined,\n    description: \"Generate a flamegraph of your Hardhat tasks\",\n    type: types.boolean,\n    isOptional: true,\n    isFlag: true,\n    isVariadic: false\n  },\n  typecheck: {\n    name: \"typecheck\",\n    defaultValue: false,\n    description: \"Enable TypeScript type-checking of your scripts/tests\",\n    type: types.boolean,\n    isFlag: true,\n    isOptional: true,\n    isVariadic: false\n  }\n};","map":{"version":3,"mappings":"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","names":["exports","network","name","defaultValue","undefined","description","type","types","string","isOptional","isFlag","isVariadic","showStackTraces","boolean","version","help","emoji","process","platform","config","inputFile","verbose","maxMemory","int","tsconfig","flamegraph","typecheck"],"sources":["/Users/janrobel/Documents/PersonalProjekty/nftGenerateAi/clientAndContract/node_modules/hardhat/src/internal/core/params/hardhat-params.ts"],"sourcesContent":["import { HardhatParamDefinitions } from \"../../../types\";\n\nimport * as types from \"./argumentTypes\";\n\nexport const HARDHAT_PARAM_DEFINITIONS: HardhatParamDefinitions = {\n  network: {\n    name: \"network\",\n    defaultValue: undefined,\n    description: \"The network to connect to.\",\n    type: types.string,\n    isOptional: true,\n    isFlag: false,\n    isVariadic: false,\n  },\n  showStackTraces: {\n    name: \"showStackTraces\",\n    defaultValue: false,\n    description: \"Show stack traces (always enabled on CI servers).\",\n    type: types.boolean,\n    isFlag: true,\n    isOptional: true,\n    isVariadic: false,\n  },\n  version: {\n    name: \"version\",\n    defaultValue: false,\n    description: \"Shows hardhat's version.\",\n    type: types.boolean,\n    isFlag: true,\n    isOptional: true,\n    isVariadic: false,\n  },\n  help: {\n    name: \"help\",\n    defaultValue: false,\n    description: \"Shows this message, or a task's help if its name is provided\",\n    type: types.boolean,\n    isFlag: true,\n    isOptional: true,\n    isVariadic: false,\n  },\n  emoji: {\n    name: \"emoji\",\n    defaultValue: process.platform === \"darwin\",\n    description: \"Use emoji in messages.\",\n    type: types.boolean,\n    isFlag: true,\n    isOptional: true,\n    isVariadic: false,\n  },\n  config: {\n    name: \"config\",\n    defaultValue: undefined,\n    description: \"A Hardhat config file.\",\n    type: types.inputFile,\n    isFlag: false,\n    isOptional: true,\n    isVariadic: false,\n  },\n  verbose: {\n    name: \"verbose\",\n    defaultValue: false,\n    description: \"Enables Hardhat verbose logging\",\n    type: types.boolean,\n    isFlag: true,\n    isOptional: true,\n    isVariadic: false,\n  },\n  maxMemory: {\n    name: \"maxMemory\",\n    defaultValue: undefined,\n    description: \"The maximum amount of memory that Hardhat can use.\",\n    type: types.int,\n    isOptional: true,\n    isFlag: false,\n    isVariadic: false,\n  },\n  tsconfig: {\n    name: \"tsconfig\",\n    defaultValue: undefined,\n    description: \"A TypeScript config file.\",\n    type: types.inputFile,\n    isOptional: true,\n    isFlag: false,\n    isVariadic: false,\n  },\n  flamegraph: {\n    name: \"flamegraph\",\n    defaultValue: undefined,\n    description: \"Generate a flamegraph of your Hardhat tasks\",\n    type: types.boolean,\n    isOptional: true,\n    isFlag: true,\n    isVariadic: false,\n  },\n  typecheck: {\n    name: \"typecheck\",\n    defaultValue: false,\n    description: \"Enable TypeScript type-checking of your scripts/tests\",\n    type: types.boolean,\n    isFlag: true,\n    isOptional: true,\n    isVariadic: false,\n  },\n};\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}