{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { SentryError } from '@sentry/utils';\nimport * as https from 'https';\nimport { BaseTransport } from './base';\n/** Node https module transport */\nvar HTTPSTransport = /** @class */function (_super) {\n  __extends(HTTPSTransport, _super);\n  /** Create a new instance and set this.agent */\n  function HTTPSTransport(options) {\n    var _this = _super.call(this, options) || this;\n    _this.options = options;\n    var proxy = options.httpsProxy || options.httpProxy || process.env.https_proxy || process.env.http_proxy;\n    _this.module = https;\n    _this.client = proxy ? new (require('https-proxy-agent'))(proxy) : new https.Agent({\n      keepAlive: false,\n      maxSockets: 30,\n      timeout: 2000\n    });\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n  HTTPSTransport.prototype.sendEvent = function (event) {\n    if (!this.module) {\n      throw new SentryError('No module available in HTTPSTransport');\n    }\n    return this._sendWithModule(this.module, event);\n  };\n  return HTTPSTransport;\n}(BaseTransport);\nexport { HTTPSTransport };","map":{"version":3,"mappings":";AACA,SAASA,WAAW,QAAQ,eAAe;AAC3C,OAAO,KAAKC,KAAK,MAAM,OAAO;AAE9B,SAASC,aAAa,QAAQ,QAAQ;AAEtC;AACA;EAAoCC;EAClC;EACA,wBAA0BC,OAAyB;IAAnD,YACEC,kBAAMD,OAAO,CAAC;IADUE,aAAO,GAAPF,OAAO;IAE/B,IAAMG,KAAK,GAAGH,OAAO,CAACI,UAAU,IAAIJ,OAAO,CAACK,SAAS,IAAIC,OAAO,CAACC,GAAG,CAACC,WAAW,IAAIF,OAAO,CAACC,GAAG,CAACE,UAAU;IAC1GP,KAAI,CAACQ,MAAM,GAAGb,KAAK;IACnBK,KAAI,CAACS,MAAM,GAAGR,KAAK,GACd,KAAKS,OAAO,CAAC,mBAAmB,CAAC,EAAET,KAAK,CAAiB,GAC1D,IAAIN,KAAK,CAACgB,KAAK,CAAC;MAAEC,SAAS,EAAE,KAAK;MAAEC,UAAU,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAI,CAAE,CAAC;;EAC1E;EAEA;;;EAGOC,kCAAS,GAAhB,UAAiBC,KAAY;IAC3B,IAAI,CAAC,IAAI,CAACR,MAAM,EAAE;MAChB,MAAM,IAAId,WAAW,CAAC,uCAAuC,CAAC;;IAEhE,OAAO,IAAI,CAACuB,eAAe,CAAC,IAAI,CAACT,MAAM,EAAEQ,KAAK,CAAC;EACjD,CAAC;EACH,qBAAC;AAAD,CAAC,CApBmCpB,aAAa","names":["SentryError","https","BaseTransport","__extends","options","_super","_this","proxy","httpsProxy","httpProxy","process","env","https_proxy","http_proxy","module","client","require","Agent","keepAlive","maxSockets","timeout","HTTPSTransport","event","_sendWithModule"],"sources":["/Users/janrobel/Documents/PersonalProjekty/nftGenerateAi/clientAndContract/node_modules/@sentry/node/src/transports/https.ts"],"sourcesContent":["import { Event, Response, TransportOptions } from '@sentry/types';\nimport { SentryError } from '@sentry/utils';\nimport * as https from 'https';\n\nimport { BaseTransport } from './base';\n\n/** Node https module transport */\nexport class HTTPSTransport extends BaseTransport {\n  /** Create a new instance and set this.agent */\n  public constructor(public options: TransportOptions) {\n    super(options);\n    const proxy = options.httpsProxy || options.httpProxy || process.env.https_proxy || process.env.http_proxy;\n    this.module = https;\n    this.client = proxy\n      ? (new (require('https-proxy-agent'))(proxy) as https.Agent)\n      : new https.Agent({ keepAlive: false, maxSockets: 30, timeout: 2000 });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(event: Event): Promise<Response> {\n    if (!this.module) {\n      throw new SentryError('No module available in HTTPSTransport');\n    }\n    return this._sendWithModule(this.module, event);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}