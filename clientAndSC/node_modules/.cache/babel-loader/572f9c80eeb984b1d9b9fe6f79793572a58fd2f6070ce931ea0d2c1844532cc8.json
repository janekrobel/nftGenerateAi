{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getRecommendedGitIgnore = exports.getUserConfigPath = exports.isCwdInsideProject = void 0;\nconst find_up_1 = __importDefault(require(\"find-up\"));\nconst fs_extra_1 = __importDefault(require(\"fs-extra\"));\nconst path_1 = __importDefault(require(\"path\"));\nconst packageInfo_1 = require(\"../util/packageInfo\");\nconst errors_1 = require(\"./errors\");\nconst errors_list_1 = require(\"./errors-list\");\nconst JS_CONFIG_FILENAME = \"hardhat.config.js\";\nconst TS_CONFIG_FILENAME = \"hardhat.config.ts\";\nfunction isCwdInsideProject() {\n  return find_up_1.default.sync(TS_CONFIG_FILENAME) !== null || find_up_1.default.sync(JS_CONFIG_FILENAME) !== null;\n}\nexports.isCwdInsideProject = isCwdInsideProject;\nfunction getUserConfigPath() {\n  const tsConfigPath = find_up_1.default.sync(TS_CONFIG_FILENAME);\n  if (tsConfigPath !== null) {\n    return tsConfigPath;\n  }\n  const pathToConfigFile = find_up_1.default.sync(JS_CONFIG_FILENAME);\n  if (pathToConfigFile === null) {\n    throw new errors_1.HardhatError(errors_list_1.ERRORS.GENERAL.NOT_INSIDE_PROJECT);\n  }\n  return pathToConfigFile;\n}\nexports.getUserConfigPath = getUserConfigPath;\nasync function getRecommendedGitIgnore() {\n  const packageRoot = (0, packageInfo_1.getPackageRoot)();\n  const gitIgnorePath = path_1.default.join(packageRoot, \"recommended-gitignore.txt\");\n  return fs_extra_1.default.readFile(gitIgnorePath, \"utf-8\");\n}\nexports.getRecommendedGitIgnore = getRecommendedGitIgnore;","map":{"version":3,"mappings":";;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA,MAAMA,kBAAkB,GAAG,mBAAmB;AAC9C,MAAMC,kBAAkB,GAAG,mBAAmB;AAE9C,SAAgBC,kBAAkB;EAChC,OACEC,iBAAM,CAACC,IAAI,CAACH,kBAAkB,CAAC,KAAK,IAAI,IACxCE,iBAAM,CAACC,IAAI,CAACJ,kBAAkB,CAAC,KAAK,IAAI;AAE5C;AALAK;AAOA,SAAgBC,iBAAiB;EAC/B,MAAMC,YAAY,GAAGJ,iBAAM,CAACC,IAAI,CAACH,kBAAkB,CAAC;EACpD,IAAIM,YAAY,KAAK,IAAI,EAAE;IACzB,OAAOA,YAAY;;EAGrB,MAAMC,gBAAgB,GAAGL,iBAAM,CAACC,IAAI,CAACJ,kBAAkB,CAAC;EACxD,IAAIQ,gBAAgB,KAAK,IAAI,EAAE;IAC7B,MAAM,IAAIC,qBAAY,CAACC,oBAAM,CAACC,OAAO,CAACC,kBAAkB,CAAC;;EAG3D,OAAOJ,gBAAgB;AACzB;AAZAH;AAcO,eAAeQ,uBAAuB;EAC3C,MAAMC,WAAW,GAAG,gCAAc,GAAE;EACpC,MAAMC,aAAa,GAAGC,cAAI,CAACC,IAAI,CAACH,WAAW,EAAE,2BAA2B,CAAC;EAEzE,OAAOI,kBAAO,CAACC,QAAQ,CAACJ,aAAa,EAAE,OAAO,CAAC;AACjD;AALAV","names":["JS_CONFIG_FILENAME","TS_CONFIG_FILENAME","isCwdInsideProject","find_up_1","sync","exports","getUserConfigPath","tsConfigPath","pathToConfigFile","errors_1","errors_list_1","GENERAL","NOT_INSIDE_PROJECT","getRecommendedGitIgnore","packageRoot","gitIgnorePath","path_1","join","fs_extra_1","readFile"],"sources":["/Users/janrobel/Documents/PersonalProjekty/nftGenerateAi/clientAndContract/node_modules/hardhat/src/internal/core/project-structure.ts"],"sourcesContent":["import findUp from \"find-up\";\nimport fsExtra from \"fs-extra\";\nimport path from \"path\";\n\nimport { getPackageRoot } from \"../util/packageInfo\";\n\nimport { HardhatError } from \"./errors\";\nimport { ERRORS } from \"./errors-list\";\nconst JS_CONFIG_FILENAME = \"hardhat.config.js\";\nconst TS_CONFIG_FILENAME = \"hardhat.config.ts\";\n\nexport function isCwdInsideProject() {\n  return (\n    findUp.sync(TS_CONFIG_FILENAME) !== null ||\n    findUp.sync(JS_CONFIG_FILENAME) !== null\n  );\n}\n\nexport function getUserConfigPath() {\n  const tsConfigPath = findUp.sync(TS_CONFIG_FILENAME);\n  if (tsConfigPath !== null) {\n    return tsConfigPath;\n  }\n\n  const pathToConfigFile = findUp.sync(JS_CONFIG_FILENAME);\n  if (pathToConfigFile === null) {\n    throw new HardhatError(ERRORS.GENERAL.NOT_INSIDE_PROJECT);\n  }\n\n  return pathToConfigFile;\n}\n\nexport async function getRecommendedGitIgnore() {\n  const packageRoot = getPackageRoot();\n  const gitIgnorePath = path.join(packageRoot, \"recommended-gitignore.txt\");\n\n  return fsExtra.readFile(gitIgnorePath, \"utf-8\");\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}